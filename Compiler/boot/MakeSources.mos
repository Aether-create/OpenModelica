runScript("LoadCompilerSources.mos");
mkdir("build");
writeFile("Makefile.sources.tmp", "ALL_OBJECTS="+sum(typeNameString(cl) + ".o " for cl in getClassNames())+"
ALL_SOURCES=" + sum(file + " " for file in files) + "
ALL_INTERFACES=" + sum("build/" + typeNameString(cl) + ".stamp.mo " for cl in getClassNames()) + "
" + sum("\nbuild/" + typeNameString(cl) + ".stamp.mo: " + getSourceFile(cl) for cl in getClassNames()) + "
ALL_FILES=" + sum("build/" + typeNameString(cl) + ".mo " for cl in getClassNames()) + "
" + sum("\nbuild/" + typeNameString(cl) + ".mo: " + getSourceFile(cl) + "\n\tln -sf $< $@\n" for cl in getClassNames()));

loadString("within Absyn; /* So it is not listed by getClassNames() */
function delimit
  input String str1;
  input String str2;
  output String o;
algorithm
  o := str1 + \",\" + str2;
end delimit;");getErrorString();

writeFile("LoadCompilerInterface.mos.tmp","if true then /* Suppress output */
  setCommandLineOptions(\"+g=MetaModelica\");
  files:={"+Absyn.delimit("\"build/" + typeNameString(cl) + ".interface.mo\"" for cl in getClassNames())+"};
  LoadCompilerSourcesRes:= OpenModelica.Scripting.loadFiles(files,numThreads=min(5,OpenModelica.Scripting.numProcessors()));
  if not LoadCompilerSourcesRes then
    print(\"Failed to load compiler sources:
\");
    print(getErrorString());
    exit(1);
  end if;
end if;
");
