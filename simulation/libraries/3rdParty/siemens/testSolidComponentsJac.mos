// name:     simulate SolidComponents using dasslSymJac
// keywords: SiemensPower SolidComponents
// status:   correct
// teardown_command: rm -rf SiemensPower.Components.SolidComponents.Tests.wall_test* _SiemensPower.Components.SolidComponents.Tests.wall_test* output.log
//
//  Test SiemensPower component SolidComponents
//

loadModel(Modelica);
loadFile("SiemensPower/package.mo");getErrorString();

// test jacobians
setCommandLineOptions("+generateSymbolicJacobian");
simulate(SiemensPower.Components.SolidComponents.Tests.wall_test, stopTime=25, method="dassl", simflags="-dasslJacobian=symbolical");

res := OpenModelica.Scripting.compareSimulationResults("SiemensPower.Components.SolidComponents.Tests.wall_test_res.mat","ReferenceFiles/wall_test.mat","SiemensPower.Components.SolidComponents.Tests.wall_test_diff.csv",0.01,0.00001,
  { "heatInput.C1signal.y",
    "wall.layer[1].T[1]",
    "wall.layer[1].T[2]",    
    "wall.layer[1].T[3]",
    "wall.layer[1].T[4]",
    "wall.layer[1].T[5]",
    "wall.layer[2].T[1]",
    "wall.layer[2].T[2]",
    "wall.layer[2].T[3]",
    "wall.layer[2].T[4]",
    "wall.layer[2].T[5]",
    "wall.layer[3].T[1]",
    "wall.layer[3].T[2]",
    "wall.layer[3].T[3]",
    "wall.layer[3].T[4]",
    "wall.layer[3].T[5]"
});



// Result:
// true
// true
// "Warning: Requested package Modelica of version 3.2, but this package was already loaded with version 3.2.1. You might experience problems if these versions are incompatible.
// "
// true
// record SimulationResult
//     resultFile = "SiemensPower.Components.SolidComponents.Tests.wall_test_res.mat",
//     simulationOptions = "startTime = 0.0, stopTime = 25.0, numberOfIntervals = 500, tolerance = 1e-06, method = 'dassl', fileNamePrefix = 'SiemensPower.Components.SolidComponents.Tests.wall_test', options = '', outputFormat = 'mat', variableFilter = '.*', cflags = '', simflags = '-dasslJacobian=symbolical'",
//     messages = ""
// end SimulationResult;
// {"Files Equal!"}
// endResult
