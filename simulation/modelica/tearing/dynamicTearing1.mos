// name:      dynamicTearing1
// keywords:  dynamic tearing
// status:    correct

loadString("
model dynamicTearing1
   Real x,y,z,x1,y1,z1,z2;
   final parameter Real a=10;
   final parameter Real b=5;
   final parameter Real c=2;
equation
   (a-4-b-time)*y = x * time +time;
   a + b - 7*c = x*y +1 +y;
   z = x - y;
   
   (a-4-b-time)*y1 = x1 * time +time;
   a + b - 7*c = x1*y1 +1 +y;
   z1 = x1 - y1;
   
   z2 = z + z1;
end dynamicTearing1;
"); getErrorString();

setTearingMethod("cellier"); getErrorString();
setCommandLineOptions("+forceTearing"); getErrorString();
setCommandLineOptions("+dynamicTearing"); getErrorString();
simulate(dynamicTearing1,startTime=0,stopTime=2,numberOfIntervals=500,simflags="-nls=newton"); getErrorString();

print("x at time=0.0");
val(x,0.0); getErrorString();
print("x1 at time=0.0");
val(x1,0.0); getErrorString();
print("y at time=0.0");
val(y,0.0); getErrorString();
print("y1 at time=0.0");
val(y1,0.0); getErrorString();
print("z at time=0.0");
val(z,0.0); getErrorString();
print("z1 at time=0.0");
val(z1,0.0); getErrorString();
print("z2 at time=0.0");
val(z2,0.0); getErrorString();
print("x at time=0.1");
val(x,1.1); getErrorString();
print("x1 at time=1.1");
val(x1,1.1); getErrorString();
print("y at time=1.1");
val(y,1.1); getErrorString();
print("y1 at time=1.1");
val(y1,1.1); getErrorString();
print("z at time=1.1");
val(z,1.1); getErrorString();
print("z1 at time=1.1");
val(z1,1.1); getErrorString();
print("z2 at time=1.1");
val(z2,1.1); getErrorString();


// Result:
// true
// ""
// true
// ""
// true
// ""
// true
// ""
// record SimulationResult
//     resultFile = "dynamicTearing1_res.mat",
//     simulationOptions = "startTime = 0.0, stopTime = 2.0, numberOfIntervals = 500, tolerance = 1e-06, method = 'dassl', fileNamePrefix = 'dynamicTearing1', options = '', outputFormat = 'mat', variableFilter = '.*', cflags = '', simflags = '-nls=newton'",
//     messages = ""
// end SimulationResult;
// "Warning: There are iteration variables with default zero start attribute. Use +d=initialization for more information.
// "
// x at time=0.0
// 0.0
// ""
// x1 at time=0.0
// 0.0
// ""
// y at time=0.0
// 0.0
// ""
// y1 at time=0.0
// 0.0
// ""
// z at time=0.0
// 0.0
// ""
// z1 at time=0.0
// 0.0
// ""
// z2 at time=0.0
// 0.0
// ""
// x at time=0.1
// -0.9999997219956582
// ""
// x1 at time=1.1
// -2.780044190558462e-07
// ""
// y at time=1.1
// -3.058047759463276e-06
// ""
// y1 at time=1.1
// -10.99999694195138
// ""
// z at time=1.1
// -0.9999966639478988
// ""
// z1 at time=1.1
// 10.99999666394696
// ""
// z2 at time=1.1
// 9.999999999999062
// ""
// endResult
