// name:      functionTest5
// keywords:  evalConstFunc
// status:    correct
//


loadFile("PartEvalFunc.mo"); getErrorString();
setDebugFlags("dumpeqninorder");getErrorString();
simulate(PartEvalFunc.functionTest5);getErrorString();
res := OpenModelica.Scripting.compareSimulationResults("PartEvalFunc.functionTest5_res.mat",
  "ReferenceFiles/functionTest5.mat",
  "PartEvalFunc.functionTest5_diff.csv", 0.01, 0.0001,
    {"a","b","c","d","r1.x","r1.y","r1.z","r2.x","r2.y","r2.z"});  
getErrorString();
// Result:
// true
// ""
// true
// ""
//
// indxdae: eqns in order
// ========================================
// SingleEquation: 1
// 1: $cse1.z:VARIABLE()  type: Real  unreplaceable
// 1/1 (1): $cse1.z = 3.0   [binding]
//
// SingleEquation: 1
// 1: $cse1.x:VARIABLE()  type: Real  unreplaceable
// 1/1 (1): $cse1.x = 2.0   [binding]
//
// SingleEquation: 1
// 1: $cse1.y:VARIABLE()  type: Real  unreplaceable
// 1/1 (1): $cse1.y = time   [dynamic]
//
// ComplexEquation:
// 1: $cse2:VARIABLE()  type: Real  unreplaceable
// 2: $cse3:VARIABLE()  type: Real  unreplaceable
// 1/1 (2): ($cse2, $cse3) = PartEvalFunc.recfunc2_eval1($cse1, $cse1.y)   [binding]
//
// SingleEquation: 6
// 1: r2.y:VARIABLE(fixed = false )  type: Real 
// 1/1 (1): r2.y = $cse2   [binding]
//
// SingleEquation: 7
// 1: r2.z:VARIABLE(fixed = false )  type: Real 
// 1/1 (1): r2.z = $cse3   [binding]
//
// SingleEquation: 3
// 1: c:VARIABLE()  type: Real 
// 1/1 (1): c = $cse2 + $cse1.y   [dynamic]
//
// SingleEquation: 4
// 1: d:STATE(1,c)(start = 0.0 fixed = true )  type: Real 
// 1/1 (1): der(d) = c   [dynamic]
//
// SingleEquation: 5
// 1: a:VARIABLE(fixed = false )  type: Real 
// 1/1 (1): a = $cse1.y   [binding]
//
//
// record SimulationResult
//     resultFile = "PartEvalFunc.functionTest5_res.mat",
//     simulationOptions = "startTime = 0.0, stopTime = 1.0, numberOfIntervals = 500, tolerance = 1e-06, method = 'dassl', fileNamePrefix = 'PartEvalFunc.functionTest5', options = '', outputFormat = 'mat', variableFilter = '.*', cflags = '', simflags = ''",
//     messages = ""
// end SimulationResult;
// ""
// {"Files Equal!"}
// ""
// endResult
