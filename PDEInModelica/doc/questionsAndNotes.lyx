#LyX 2.0 created this file. For more info see http://www.lyx.org/
\lyxformat 413
\begin_document
\begin_header
\textclass report
\use_default_options true
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman default
\font_sans default
\font_typewriter default
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100

\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref false
\papersize default
\use_geometry false
\use_amsmath 1
\use_esint 1
\use_mhchem 1
\use_mathdots 1
\cite_engine basic
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\use_refstyle 1
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Chapter
\start_of_appendix

\lang british
Articles and books
\end_layout

\begin_layout Subparagraph

\lang british
I want to read:
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard

\lang british
A DIFFERENTIATION INDEX FOR PARTIAL DIFFERENTIAL-ALGEBRAIC EQUATIONS 
\begin_inset CommandInset citation
LatexCommand cite
key "martinson2000differentiation"

\end_inset


\end_layout

\begin_layout Standard

\lang british
INDEX AND CHARACTERISTIC ANALYSIS OF LINEAR PDAE SYSTEMS 
\begin_inset CommandInset citation
LatexCommand cite
key "martinson2003index"

\end_inset


\end_layout

\begin_layout Standard

\lang british
Finite difference methods for ordinary and partial differential equations
 
\begin_inset CommandInset citation
LatexCommand cite
key "leveque2007finite"

\end_inset


\end_layout

\begin_layout Chapter

\lang british
Questions & problems: 
\end_layout

\begin_layout Standard

\lang british
important topics are written in bold
\end_layout

\begin_layout Section

\lang british
Modelica language extension
\end_layout

\begin_layout Itemize

\series bold
Allow writing equations independent on particular domain and also coordinate
 system?
\end_layout

\begin_deeper
\begin_layout Itemize
perhaps yes 
\end_layout

\begin_deeper
\begin_layout Itemize
using coordinate free differential operators 
\family typewriter
(grad, div
\family default
 etc.) 
\end_layout

\begin_layout Itemize
or using 
\family typewriter
dom
\family default
 (as 
\family typewriter
this
\family default
 in oop
\family typewriter
, described later)
\family default
 to addres domain generaly in differentiation 
\end_layout

\begin_layout Itemize
or using 
\family typewriter
replaceable
\family default
 and 
\family typewriter
redeclare
\family default
 on domain class
\end_layout

\end_deeper
\begin_layout Itemize
but how to define fields in a domain independent way?
\end_layout

\begin_layout Itemize
how to applay domain independetly written equations on particular domain?
\end_layout

\begin_layout Itemize
Write also boundary conditions domain independent?
\end_layout

\begin_layout Itemize
Notation for normal vector to domain boundaries e.g.
 
\family typewriter
omega.left.n.

\family default
 How to write normal vector domain-independently?
\end_layout

\end_deeper
\begin_layout Itemize

\series bold
How to deal with (name) coordinate (independent) 
\series default
variables, so that it doesn't meddle with other variables (ODE)? Should
 it be fixed or defined within the domain deffinition? (Or cartesian fixed
 and others defined extra by user if needed?) Some approaches (possibly
 good ideas underlined):
\end_layout

\begin_deeper
\begin_layout Itemize

\family typewriter
\bar under
in domain_name.region_name
\family default
 opens scope.
 Use keyword 
\family typewriter
domain
\family default
 (or just 
\family typewriter
dom
\family default
), similarly as 
\family typewriter
this
\family default
 in oop to address coordinate variables defined within this domain.
 Than coordinate names may be fixed.
\begin_inset Newline newline
\end_inset

E.g.
 
\family typewriter
pder(u, dom.x)=0
\begin_inset space \quad{}
\end_inset

in omega.left
\begin_inset Newline newline
\end_inset

can be used in combination with fixed or user-defined coordinate names
\end_layout

\begin_layout Itemize

\bar under
name by user (use some special data type (
\family typewriter
Coordinate
\family default
 or 
\family typewriter
Independent
\family default
) to define independent variables within domain record (or class) -- see
 
\begin_inset CommandInset ref
LatexCommand ref
reference "domainDeffinitions"

\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
in this case shall we have nerertheless some coordinates defined by default
 (perhaps cartesian)?
\end_layout

\end_deeper
\begin_layout Itemize
avoid coordinate variables at all
\end_layout

\begin_deeper
\begin_layout Itemize

\bar under
allow writing equations coordinate-free, using only 
\family typewriter
pder(u,time), grad, div,
\family default
 ...
 operators (does it mean, we need no coordinates defined in domain?).
\end_layout

\begin_layout Itemize
use operators 
\family typewriter
pderx(u)
\family default
, 
\family typewriter
pdert(u) or
\end_layout

\end_deeper
\begin_layout Itemize
NO.

\family typewriter
 domain_name.variable_name
\family default
 (
\family typewriter
e.g.
 omega.x
\family default
).
 -- This makes equation domain dependent.
\end_layout

\begin_layout Itemize
NO.
 Fixed names 
\family typewriter
x, y, z
\family default
 used stand-alone.
 If they meddle with other variable, infere which one is it from tha fact
 that we differentiate with respect to this variable and from the actual
 domain (indicated with 
\family typewriter
in
\family default
 op.).
 -- Makes model confusing.
\end_layout

\begin_layout Itemize
fixed names and approach ODE variables from PDE in some special way.
\end_layout

\begin_layout Itemize
NO.
 use longer name for coordinate variables (e.g.
 
\family typewriter
spaceX
\family default
 ...)
\end_layout

\end_deeper
\begin_layout Itemize

\series bold
Allow other independent variables than space variables? It would require
 not to define x, y, z coordinates (independent variables) by default but
 define independent variables always in the domain deffinition as discused
 above.
\end_layout

\begin_layout Itemize
How to map shape function return values on particular space variables (e.g.
 
\family typewriter
x, y, z
\family default
) when they are not ordered? And what if there are more coordinate systems
 defined (e.g.
 cartesian and polar)?
\end_layout

\begin_layout Itemize
How to define general differential operators (as 
\family typewriter
grad, div
\family default
 ...) , if we use user defined coordinates?
\end_layout

\begin_layout Itemize
How to call atribute of Coordinate variable saying the type of the coordinate
 (now called 
\family typewriter
name
\family default
) should be the value assigned to this attribut written in quotes? It is
 also related with the previous question.
 
\begin_inset Newline newline
\end_inset

e.g.
 somethink like 
\family typewriter
Coordinate x (name = 
\begin_inset Quotes eld
\end_inset

cartesian
\begin_inset Quotes erd
\end_inset

);
\end_layout

\begin_layout Itemize

\series bold
How to write boundary conditions that combine field variables from different
 domains?
\series default
 Allow some connection of regions of different domains.
\end_layout

\begin_layout Itemize
Initialization.
\end_layout

\begin_layout Itemize
Rename 
\emph on
region
\emph default
 to 
\emph on
manifold
\emph default
\lang british

\begin_inset CommandInset citation
LatexCommand cite
key "raey"

\end_inset


\lang english
?
\end_layout

\begin_layout Itemize
unify somehow concept of region and domain?
\end_layout

\begin_layout Itemize
How to call divergence operator (standard 
\family typewriter
div
\family default
 is is already used for integer division)
\end_layout

\begin_layout Itemize
How should the shape, geometrical structure, mesh structure, etc.
 be described by an external file?
\end_layout

\begin_layout Standard
\begin_inset CommandInset line
LatexCommand rule
offset "0.5ex"
width "45col%"
height "1pt"

\end_inset


\end_layout

\begin_layout Subsection*
Solved problems:
\end_layout

\begin_layout Itemize
Rename ranges to intervals?
\end_layout

\begin_deeper
\begin_layout Itemize
yes
\end_layout

\end_deeper
\begin_layout Itemize
Domain description where some parameters are in range and others are fixed:
 {{1,1}, {0.5,0.5}} or {{1,1}, 0.5}? 
\end_layout

\begin_deeper
\begin_layout Itemize
allow both
\end_layout

\end_deeper
\begin_layout Itemize
How to deal with vector fields? How to acces its elements -- using an index
 or scalar product with standard base vectors? 
\end_layout

\begin_deeper
\begin_layout Itemize
both
\end_layout

\end_deeper
\begin_layout Itemize
How to distinguish the main domain (now called 
\family typewriter
DomainLineSegment1D
\family default
, 
\family typewriter
DomainRectangle2D
\family default
 ...) and its 
\begin_inset Quotes eld
\end_inset

subsets
\begin_inset Quotes erd
\end_inset

 where some equations hold (now called 
\family typewriter
Domain0D
\family default
, 
\family typewriter
Domain1D
\family default
 ...).
 I think only one of them should be called domain.
\end_layout

\begin_deeper
\begin_layout Itemize
\begin_inset Quotes eld
\end_inset

subsets
\begin_inset Quotes erd
\end_inset

 renaimed to regions -- 
\family typewriter
(Region0D, Region1D, Region 2D, Region3D)
\end_layout

\end_deeper
\begin_layout Itemize
directional derivative
\end_layout

\begin_deeper
\begin_layout Itemize

\family typewriter
der(u,v)
\family default
 (
\begin_inset Formula $u$
\end_inset

 is scalar or vector field in 
\begin_inset Formula $\mathrm{R}^{n}$
\end_inset

, 
\begin_inset Formula $v$
\end_inset

 is vector in 
\begin_inset Formula $\mathrm{R}^{n}$
\end_inset

)
\end_layout

\end_deeper
\begin_layout Itemize
Should it be possible to override initial and boundary conditions given
 in model with some different values from external configuration file?
\end_layout

\begin_deeper
\begin_layout Itemize
yes
\end_layout

\end_deeper
\begin_layout Itemize
How to set initial condition for field derivative in similar way as using
 
\family typewriter
start
\family default
 atribute (i.e.
 not using equation in 
\family typewriter
initial
\family default
 section)? See 
\begin_inset CommandInset ref
LatexCommand ref
reference "String-equation-(1D)"

\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize

\family typewriter
start
\family default
 atribut is array where index denotes the derivative 
\family typewriter
start[0]
\family default
 - actual value, 
\family typewriter
start[1]
\family default
 - first derivative
\end_layout

\end_deeper
\begin_layout Section

\lang british
Generated code
\end_layout

\begin_layout Itemize

\lang british
How to represent on which particular boundary an boundary condition hold
 in generated code (or even on which interior domain hold which PDE equation
 system, if we support various interiors)? -- Some domain struct could hold
 both shapeFunction parameter ranges and pointer (or some index) to function
 with the corresponding equations.
 Or boundary condition function knows on which elements (indexes) of variable
 arrays should be applied.
\end_layout

\begin_layout Itemize

\series bold
\lang british
Should be generated functions independent on grid? It means either
\series default

\begin_inset Newline newline
\end_inset


\family typewriter
functionPDEIndependent(u,u_x,t,x)
\begin_inset Newline newline
\end_inset


\begin_inset space \quad{}
\end_inset

u_t = ...
\begin_inset Newline newline
\end_inset


\begin_inset space \quad{}
\end_inset

return u_t
\family default

\begin_inset Newline newline
\end_inset

or
\begin_inset Newline newline
\end_inset


\family typewriter
functionPDEDependent(data)
\begin_inset Newline newline
\end_inset


\begin_inset space \quad{}
\end_inset

for (int i ...)
\begin_inset Newline newline
\end_inset


\begin_inset space \qquad{}
\end_inset

u_t[i] = ...
\end_layout

\begin_layout Section

\lang british
Numerics and solver
\end_layout

\begin_layout Itemize

\series bold
\lang british
Shall we support higher derivatives in solver?
\end_layout

\begin_layout Itemize

\series bold
\lang british
What about space derivatives? -- All state and algebraics have corresponding
 array for its space derivative, not all of them are used.
 -- Or all space derivatives of states and algebraics are stored as different
 algebraic fields.
 -- Or there is array for space derivatives that is utilised by both states
 and algebraics that need it.
\end_layout

\begin_layout Itemize

\lang british
What about multi step mothods (RK, P-K)?
\end_layout

\begin_layout Itemize

\lang british
How to generate even (or arbitrary) meshes with nonlinea shape functions?
\end_layout

\begin_layout Itemize

\lang british
How to generate mesh points just on the boundary? 1D -- simple -- just two
 points.
 2D -- We can go through the boundary curve and detect crossings of grid
 lines.
 3D -- who knows?!
\end_layout

\begin_layout Itemize

\lang british
How to plugin an already existing solver?
\end_layout

\begin_layout Itemize

\lang british
How to determine causality of boundary conditions and other equations that
 hold on less dimensional manifolds.
\end_layout

\begin_layout Itemize

\lang british
Build whole solver in some PDE framework, perhaps Overture (http://www.overturefr
amework.org/)
\end_layout

\begin_layout Section
TODO
\end_layout

\begin_layout Itemize
Write a library for vector fields defining scalar and vector product, divergence
, gradient, rotation...
\end_layout

\begin_layout Itemize
Write model in coordinates different from cartesian
\end_layout

\end_body
\end_document
