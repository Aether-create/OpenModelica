# Makefile generated by OpenModelica
OMHOME=/home/marcus/workspace/openmodelica/openmodelica/OMCompiler/build
include $(OMHOME)/include/omc/cpp/ModelicaConfig_gcc.inc
include $(OMHOME)/include/omc/cpp/ModelicaLibraryConfig.inc
# Simulations use -O0 by default
SIM_OR_DYNLOAD_OPT_LEVEL=-O0
CC=gcc -fopenmp
CXX=g++

EXEEXT=
DLLEXT=.so
CFLAGS_BASED_ON_INIT_FILE=
CFLAGS=$(CFLAGS_BASED_ON_INIT_FILE) -Winvalid-pch $(SYSTEM_CFLAGS) -I"$(OMHOME)/include/omc/cpp/Core" -I"$(OMHOME)/include/omc/cpp/" -I.  -I"$(BOOST_INCLUDE)" -I"$(UMFPACK_INCLUDE)"   
CFLAGS_STATIC=$(CFLAGS) -I"$(SUNDIALS_INCLUDE)" -I"$(SUNDIALS_INCLUDE)/kinsol" -I"$(SUNDIALS_INCLUDE)/nvector"

MODELICA_EXTERNAL_LIBS=-lModelicaExternalC -lModelicaStandardTables -L$(LAPACK_LIBS) $(LAPACK_LIBRARIES)
LDSYSTEMFLAGS=-L"$(OMHOME)/lib/x86_64-linux-gnu/omc/cpp" $(BASE_LIB)  -lOMCppOMCFactory -lOMCppSystem -lOMCppModelicaUtilities -lOMCppMath   -Wl,-rpath,"$(OMHOME)/lib/x86_64-linux-gnu/omc/cpp" -lOMCppExtensionUtilities -L"$(BOOST_LIBS)" $(BOOST_LIBRARIES) $(LINUX_LIB_DL)
LDSYSTEMFLAGS_STATIC=$(LIBOMCPPOMCFACTORY) $(LIBOMCPPSIMCONTROLLER) $(LIBOMCPPSIMULATIONSETTINGS) $(LIBOMCPPSYSTEM) $(LIBOMCPPDATAEXCHANGE) $(LIBOMCPPNEWTON) $(LIBOMCPPUMFPACK)  $(LIBOMCPPIDA) $(LIBOMCPPKINSOL) $(LIBOMCPPCVODE) $(LIBOMCPPSOLVER) $(LIBOMCPPMATH) $(LIBOMCPPMODELICAUTILITIES) -L$(SUNDIALS_LIB_DIR) $(SUNDIALS_LIBS) $(UMFPACK_LIBS) $(LAPACK_LIBS) $(LDSYSTEMFLAGS)
LDMAINFLAGS=-L"$(OMHOME)/lib/x86_64-linux-gnu/omc/cpp" -L"$(OMHOME)/bin" -lOMCppOMCFactory -lOMCppModelicaUtilities -L"$(BOOST_LIBS)" $(BOOST_LIBRARIES) $(LINUX_LIB_DL)   -Wl,-rpath,"$(OMHOME)/lib/x86_64-linux-gnu/omc/cpp" -lOMCppExtensionUtilities
LDMAINFLAGS_STATIC=$(LIBOMCPPOMCFACTORY) $(LIBOMCPPSIMCONTROLLER) $(LIBOMCPPSIMULATIONSETTINGS) $(LIBOMCPPSYSTEM) $(LIBOMCPPDATAEXCHANGE) $(LIBOMCPPNEWTON) $(LIBOMCPPUMFPACK)  $(LIBOMCPPIDA) $(LIBOMCPPKINSOL) $(LIBOMCPPCVODE) $(LIBOMCPPSOLVER) $(LIBOMCPPMATH) $(LIBOMCPPMODELICAUTILITIES) -L$(SUNDIALS_LIB_DIR) $(SUNDIALS_LIBS) $(UMFPACK_LIBS) $(LAPACK_LIBS) $(LDMAINFLAGS)
CPPFLAGS = $(CFLAGS) 
SYSTEMFILE=OMCppModelica.Electrical.Analog.Examples.CauerLowPassSC.cpp
MAINFILE = OMCppModelica.Electrical.Analog.Examples.CauerLowPassSCMain.cpp
MAINOBJ=Modelica.Electrical.Analog.Examples.CauerLowPassSC$(EXEEXT)
SYSTEMOBJ=OMCppModelica.Electrical.Analog.Examples.CauerLowPassSC$(DLLEXT)

CALCHELPERMAINFILE=OMCppModelica.Electrical.Analog.Examples.CauerLowPassSCCalcHelperMain.cpp
CALCHELPERMAINFILE2=OMCppModelica.Electrical.Analog.Examples.CauerLowPassSCCalcHelperMain2.cpp
CALCHELPERMAINFILE3=OMCppModelica.Electrical.Analog.Examples.CauerLowPassSCCalcHelperMain3.cpp
CALCHELPERMAINFILE4=OMCppModelica.Electrical.Analog.Examples.CauerLowPassSCCalcHelperMain4.cpp
CALCHELPERMAINFILE5=OMCppModelica.Electrical.Analog.Examples.CauerLowPassSCCalcHelperMain5.cpp
ALGLOOPSMAINFILE=OMCppModelica.Electrical.Analog.Examples.CauerLowPassSCAlgLoopMain.cpp

CPPFILES=$(SYSTEMFILE) $(CALCHELPERMAINFILE) $(CALCHELPERMAINFILE2) $(CALCHELPERMAINFILE3) $(CALCHELPERMAINFILE4) $(CALCHELPERMAINFILE5) $(ALGLOOPSMAINFILE)
OFILES=$(CPPFILES:.cpp=.o)

.PHONY: CauerLowPassSC $(CPPFILES)

Modelica.Electrical.Analog.Examples.CauerLowPassSC: $(MAINFILE) $(OFILES)
ifeq ($(RUNTIME_STATIC_LINKING),ON)
	$(eval CFLAGS=$(CFLAGS_STATIC))
	$(eval LDMAINFLAGS=$(LDMAINFLAGS_STATIC))
	$(eval LDSYTEMFLAGS=$(LDSYSTEMFLAGS_STATIC))
	$(CXX) $(CPPFLAGS) -I. -o $(MAINOBJ) $(OFILES) $(MAINFILE) $(LDMAINFLAGS) $(MODELICA_EXTERNAL_LIBS)
else
	$(CXX) -shared -o $(SYSTEMOBJ) $(OFILES) -L"/home/marcus/workspace/openmodelica/openmodelica/OMLibraries/build/Modelica 3.2.1/Electrical/Analog/Examples"   $(LDSYSTEMFLAGS) $(MODELICA_EXTERNAL_LIBS)
	$(CXX) $(CPPFLAGS) -I. -o $(MAINOBJ) $(MAINFILE) $(LDMAINFLAGS)
endif

	chmod +x Modelica.Electrical.Analog.Examples.CauerLowPassSC.sh