// name:     Modelica_Synchronous Examples
// keywords: synchronous features
// status: correct
//

loadModel(Modelica); getErrorString();
setCommandLineOptions("+std=3.3"); getErrorString();
loadFile("Modelica_Synchronous.Examples.Elementary.RealSignals.UniformNoise.mo"); getErrorString();
loadFile("Modelica_Synchronous.Examples.Systems.ControlledMixingUnit.mo"); getErrorString();
simulate(Modelica_Synchronous.Examples.Elementary.RealSignals.UniformNoise); getErrorString();
simulate(Modelica_Synchronous.Examples.Systems.ControlledMixingUnit); getErrorString();



// Result:
// true
// ""
// true
// ""
// true
// ""
// true
// ""
// record SimulationResult
//     resultFile = "",
//     simulationOptions = "startTime = 0.0, stopTime = 1.0, numberOfIntervals = 500, tolerance = 1e-006, method = 'dassl', fileNamePrefix = 'Modelica_Synchronous.Examples.Elementary.RealSignals.UniformNoise', options = '', outputFormat = 'mat', variableFilter = '.*', cflags = '', simflags = ''",
//     messages = "Simulation Failed. Model: Modelica_Synchronous.Examples.Elementary.RealSignals.UniformNoise does not exist! Please load it first before simulation."
// end SimulationResult;
// ""
// record SimulationResult
//     resultFile = "Modelica_Synchronous.Examples.Systems.ControlledMixingUnit_res.mat",
//     simulationOptions = "startTime = 0.0, stopTime = 300.0, numberOfIntervals = 500, tolerance = 1e-006, method = 'dassl', fileNamePrefix = 'Modelica_Synchronous.Examples.Systems.ControlledMixingUnit', options = '', outputFormat = 'mat', variableFilter = '.*', cflags = '', simflags = ''",
//     messages = ""
// end SimulationResult;
// "Warning: Solved clocked continuous equations with ImplicitEuler instead of specified ExplicitEuler.
// "
// endResult
