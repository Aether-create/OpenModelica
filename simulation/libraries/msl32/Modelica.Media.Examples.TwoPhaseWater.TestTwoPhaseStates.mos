// name:     Modelica.Media.Examples.TwoPhaseWater.TestTwoPhaseStates
// keywords: simulation MSL Examples
// status: correct
//
// Simulation Results
// Modelica Standard Library
//

runScript("../common/ModelTestingDefaults.mos"); getErrorString();

modelTestingType := OpenModelicaModelTesting.Kind.VerifiedSimulation;
modelName := $TypeName(Modelica.Media.Examples.TwoPhaseWater.TestTwoPhaseStates);
compareVars :=
{
   "medium.p",
   "medium.h"
};

runScript(modelTesting);getErrorString();

// Result:
// "true
// "
// ""
// OpenModelicaModelTesting.Kind.VerifiedSimulation
// Modelica.Media.Examples.TwoPhaseWater.TestTwoPhaseStates
// {"medium.p","medium.h"}
// Simulation options: startTime = 0.0, stopTime = 22.0, numberOfIntervals = 2200, tolerance = 1e-06, method = 'dassl', fileNamePrefix = 'Modelica.Media.Examples.TwoPhaseWater.TestTwoPhaseStates', options = '', outputFormat = 'mat', variableFilter = 'time|medium.p|medium.h', cflags = '', simflags = ' -abortSlowSimulation -alarm=360 -emit_protected'
// Result file: Modelica.Media.Examples.TwoPhaseWater.TestTwoPhaseStates_res.mat
// Messages: assert            | warning | The following assertion has been violated at time 20.080014
// |                 | |       | medium.x >= 0.0 and medium.x <= 1.0
// assert            | warning | Variable medium.x out of [min, max] interval: medium.x >= 0.0 and medium.x <= 1.0 has value: 1
//
// Files Equal!
// Warning: Alias set with different nominal values
//  * candidate: medium.dew.p(nominal = 1000000.0)
//  * candidate: medium.bubble.p(nominal = 1000000.0)
//  * candidate: medium.bubble2.p(nominal = 1000000.0)
//  * candidate: medium.sat.psat(nominal = 1000000.0)
//  * candidate: medium.state.p(nominal = 1000000.0)
//  * candidate: medium.p(nominal = 100000.0)
// => select value from medium.p(nominal = 100000.0) for variable: medium.p
//
// "true
// "
// ""
// endResult
