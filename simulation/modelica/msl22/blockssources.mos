// name:     Blocks Sources
// keywords: Simulate, readSimulationData
// status:   correct
// cflags:   +std=2.x
// teardown_command: rm -f *ConstantTest_* ExpSineTest_* *ExponentialsTest_* *SineTest_* *PulseTest_*
//  Simulate blocks sources and simulate.
//
loadModel(Modelica,{"2.2.2"});
loadFile("TestModels.mo");

// ConstantTest
simulate(TestModels.BlockModels.SourceTests.ConstantTest, tolerance=1e-5, numberOfIntervals=100);
{val(constant1.y,0.0),val(constant1.y,0.5)};
{val(derivative1.y,0.0),val(derivative1.y,0.5)};
system("rm -rf *ConstantTest.* output.log");

//ExpSineTest
simulate(TestModels.BlockModels.SourceTests.ExpSineTest, tolerance=1e-7, numberOfIntervals=200);
{val(expSine1.y,0.0),val(expSine1.y,0.2),val(expSine1.y,0.4),val(expSine1.y,0.6),
val(expSine1.y,0.8),val(expSine1.y,1.0)};

{val(transferFunction1.y,0.0),val(transferFunction1.y,0.2),val(transferFunction1.y,0.4),
val(transferFunction1.y,0.6),val(transferFunction1.y,0.8),val(transferFunction1.y,1.0)};

// ExponentialsTest
simulate(TestModels.BlockModels.SourceTests.ExponentialsTest, tolerance=1e-8, numberOfIntervals=400);
{val(exponentials1.y,0.0),val(exponentials1.y,0.2),val(exponentials1.y,0.4),
val(exponentials1.y,0.6),val(exponentials1.y,0.8),val(exponentials1.y,1.0)};
{val(derivative1.y,0.0),val(derivative1.y,0.2),val(derivative1.y,0.4)
,val(derivative1.y,0.6),val(derivative1.y,0.8),val(derivative1.y,1.0)};
system("rm -rf *ExponentialsTest.* output.log");

// SineTest
simulate(TestModels.BlockModels.SourceTests.SineTest, tolerance=1e-5, numberOfIntervals=100);
{val(sine1.y,0.0),val(sine1.y,0.2),val(sine1.y,0.4),
val(sine1.y,0.6),val(sine1.y,0.8),val(sine1.y,1.0)};
{val(transferFunction1.y,0.0),val(transferFunction1.y,0.2),val(transferFunction1.y,0.4)
,val(transferFunction1.y,0.6),val(transferFunction1.y,0.8),val(transferFunction1.y,1.0)};
system("rm -rf *SineTest.* output.log");

// PulseTest
simulate(TestModels.BlockModels.SourceTests.PulseTest, tolerance=1e-5, numberOfIntervals=100);
{val(p.y,0.0),val(p.y,0.1),val(p.y,0.3),val(p.y,0.5),val(p.y,0.7)};
system("rm -rf *PulseTest.* output.log");


// Result:
// true
// true
// record SimulationResult
//     resultFile = "TestModels.BlockModels.SourceTests.ConstantTest_res.mat",
//     simulationOptions = "startTime = 0.0, stopTime = 1.0, numberOfIntervals = 100, tolerance = 0.00001, method = 'dassl', fileNamePrefix = 'TestModels.BlockModels.SourceTests.ConstantTest', options = '', outputFormat = 'mat', variableFilter = '.*', cflags = '', simflags = ''",
//     messages = ""
// end SimulationResult;
// {1.0,1.0}
// {99999.99999999999,0.0}
// 0
// record SimulationResult
//     resultFile = "TestModels.BlockModels.SourceTests.ExpSineTest_res.mat",
//     simulationOptions = "startTime = 0.0, stopTime = 1.0, numberOfIntervals = 200, tolerance = 0.0000001, method = 'dassl', fileNamePrefix = 'TestModels.BlockModels.SourceTests.ExpSineTest', options = '', outputFormat = 'mat', variableFilter = '.*', cflags = '', simflags = ''",
//     messages = ""
// end SimulationResult;
// {0.0,0.481237862257548,-0.637512247785462,0.521950882725828,-0.26410893853595657,-0.00000000000000018020895204108955}
// {0.0,0.11786162280582717,0.03685797605485495,0.03017720686980547,0.06468360251156467,-0.00000020800548704893977}
// record SimulationResult
//     resultFile = "TestModels.BlockModels.SourceTests.ExponentialsTest_res.mat",
//     simulationOptions = "startTime = 0.0, stopTime = 1.0, numberOfIntervals = 400, tolerance = 0.00000001, method = 'dassl', fileNamePrefix = 'TestModels.BlockModels.SourceTests.ExponentialsTest', options = '', outputFormat = 'mat', variableFilter = '.*', cflags = '', simflags = ''",
//     messages = ""
// end SimulationResult;
// {0.0,0.8646647167633872,0.9816843611112658,0.3654006889947761,0.049451605739961456,0.006692547069322982}
// {0.0,1.503726300805232,0.20350722775178745,-4.059502750936544,-0.5494623608556218,-0.07436183798914973}
// 0
// record SimulationResult
//     resultFile = "TestModels.BlockModels.SourceTests.SineTest_res.mat",
//     simulationOptions = "startTime = 0.0, stopTime = 1.0, numberOfIntervals = 100, tolerance = 0.00001, method = 'dassl', fileNamePrefix = 'TestModels.BlockModels.SourceTests.SineTest', options = '', outputFormat = 'mat', variableFilter = '.*', cflags = '', simflags = ''",
//     messages = ""
// end SimulationResult;
// {0.0,0.19866933079506122,0.3894183423086505,0.5646424733950354,0.7173560908995228,0.8414709848078965}
// {0.0,0.018656637154352288,0.06933492747737265,0.144058271489322,0.23499174248340443,0.3345288741571049}
// 0
// record SimulationResult
//     resultFile = "TestModels.BlockModels.SourceTests.PulseTest_res.mat",
//     simulationOptions = "startTime = 0.0, stopTime = 1.0, numberOfIntervals = 100, tolerance = 0.00001, method = 'dassl', fileNamePrefix = 'TestModels.BlockModels.SourceTests.PulseTest', options = '', outputFormat = 'mat', variableFilter = '.*', cflags = '', simflags = ''",
//     messages = ""
// end SimulationResult;
// {1.0,1.0,0.0,1.0,0.0}
// 0
// endResult
