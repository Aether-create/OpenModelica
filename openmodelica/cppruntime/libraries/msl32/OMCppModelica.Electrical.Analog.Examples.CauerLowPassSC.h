#pragma once
#if defined(__TRICORE__) || defined(__vxworks)
  #define BOOST_EXTENSION_SYSTEM_DECL
  #define BOOST_EXTENSION_EVENTHANDLING_DECL
#else
  #define BOOST_EXTENSION_SYSTEM_DECL BOOST_EXTENSION_IMPORT_DECL
  #define BOOST_EXTENSION_EVENTHANDLING_DECL BOOST_EXTENSION_IMPORT_DECL
#endif


#include "System/SystemDefaultImplementation.h"

#ifdef RUNTIME_STATIC_LINKING
  #include <boost/shared_ptr.hpp>
  #include <boost/weak_ptr.hpp>
  #include <boost/numeric/ublas/vector.hpp>
  #include <boost/numeric/ublas/matrix.hpp>
  #include <string>
  #include <vector>
  #include <map>

  using std::string;
  using std::vector;
  using std::map;

  #include <SimCoreFactory/Policies/FactoryConfig.h>
  #include <SimController/ISimController.h>
  #include <System/IMixedSystem.h>

  #include <boost/numeric/ublas/matrix_sparse.hpp>
  typedef uBlas::compressed_matrix<double, uBlas::column_major, 0, uBlas::unbounded_array<int>, uBlas::unbounded_array<double> > SparseMatrix;
#endif //RUNTIME_STATIC_LINKING

//Forward declaration to speed-up the compilation process
class Functions;
class EventHandling;
class DiscreteEvents;
class CauerLowPassSCAlgloop222;
class CauerLowPassSCAlgloop228;
class CauerLowPassSCAlgloop234;
class CauerLowPassSCAlgloop240;
class CauerLowPassSCAlgloop246;
class CauerLowPassSCAlgloop252;
class CauerLowPassSCAlgloop260;
class CauerLowPassSCAlgloop266;
class CauerLowPassSCAlgloop275;
class CauerLowPassSCAlgloop281;
class CauerLowPassSCAlgloop289;
class CauerLowPassSCAlgloop290;
class CauerLowPassSCAlgloop124;
class CauerLowPassSCAlgloop131;
class CauerLowPassSCAlgloop138;
class CauerLowPassSCAlgloop145;
class CauerLowPassSCAlgloop152;
class CauerLowPassSCAlgloop159;
class CauerLowPassSCAlgloop166;
class CauerLowPassSCAlgloop167;
class CauerLowPassSCAlgloop174;
class CauerLowPassSCAlgloop181;
class CauerLowPassSCAlgloop192;
class CauerLowPassSCAlgloop200;

/*****************************************************************************
*
* Simulation code for CauerLowPassSC generated by the OpenModelica Compiler.
* System class CauerLowPassSC implements the Interface IMixedSystem
*
*****************************************************************************/
#include <boost/thread.hpp>
#include <Core/Utils/extension/busywaiting_barrier.hpp>

VAR_ALIGN_PRE class CauerLowPassSC: public IContinuous, public IEvent, public IStepEvent, public ITime, public ISystemProperties , public SystemDefaultImplementation
{
friend class CauerLowPassSCAlgloop222;
friend class CauerLowPassSCAlgloop228;
friend class CauerLowPassSCAlgloop234;
friend class CauerLowPassSCAlgloop240;
friend class CauerLowPassSCAlgloop246;
friend class CauerLowPassSCAlgloop252;
friend class CauerLowPassSCAlgloop260;
friend class CauerLowPassSCAlgloop266;
friend class CauerLowPassSCAlgloop275;
friend class CauerLowPassSCAlgloop281;
friend class CauerLowPassSCAlgloop289;
friend class CauerLowPassSCAlgloop290;
friend class CauerLowPassSCAlgloop124;
friend class CauerLowPassSCAlgloop131;
friend class CauerLowPassSCAlgloop138;
friend class CauerLowPassSCAlgloop145;
friend class CauerLowPassSCAlgloop152;
friend class CauerLowPassSCAlgloop159;
friend class CauerLowPassSCAlgloop166;
friend class CauerLowPassSCAlgloop167;
friend class CauerLowPassSCAlgloop174;
friend class CauerLowPassSCAlgloop181;
friend class CauerLowPassSCAlgloop192;
friend class CauerLowPassSCAlgloop200;
public:

    CauerLowPassSC(IGlobalSettings* globalSettings, boost::shared_ptr<IAlgLoopSolverFactory> nonlinsolverfactor, boost::shared_ptr<ISimData> sim_data, boost::shared_ptr<ISimVars> sim_vars);
    CauerLowPassSC(CauerLowPassSC &instance);
    
    virtual ~CauerLowPassSC();
    
    /// Releases the Modelica System
    virtual void destroy();
    /// Provide number (dimension) of variables according to the index
    virtual int getDimContinuousStates() const;
    /// Provide number (dimension) of boolean variables
    virtual int getDimBoolean() const;
    /// Provide number (dimension) of integer variables
    virtual int getDimInteger() const;
    /// Provide number (dimension) of real variables
    virtual int getDimReal() const ;
    /// Provide number (dimension) of string variables
    virtual int getDimString() const ;
    /// Provide number (dimension) of right hand sides (equations and/or residuals) according to the index
    virtual int getDimRHS()const;
    
    //Resets all time events
    
    // Provide variables with given index to the system
    virtual void getContinuousStates(double* z);
    virtual void getNominalStates(double* z);
    // Set variables with given index to the system
    virtual void setContinuousStates(const double* z);
    
    // Update transfer behavior of the system of equations according to command given by solver
    virtual bool evaluateAll(const UPDATETYPE command = IContinuous::UNDEF_UPDATE);
    virtual void evaluateODE(const UPDATETYPE command = IContinuous::UNDEF_UPDATE);
    virtual void evaluateZeroFuncs(const UPDATETYPE command = IContinuous::UNDEF_UPDATE);
    virtual bool evaluateConditions(const UPDATETYPE command);
    
    // Provide the right hand side (according to the index)
    virtual void getRHS(double* f);
    virtual void setRHS(const double* f);
    
    //Provide number (dimension) of zero functions
    virtual int getDimZeroFunc();
    //Provides current values of root/zero functions
    virtual void getZeroFunc(double* f);
    virtual void setConditions(bool* c);
    virtual void getConditions(bool* c);
    
    //Called to handle an event
    virtual void handleEvent(const bool* events);
    //Checks if a discrete variable has changed and triggers an event
    virtual bool checkForDiscreteEvents();
    virtual bool isStepEvent();
    //sets the terminal status
    virtual void setTerminal(bool);
    //returns the terminal status
    virtual bool terminal();
    
    
    
    // M is regular
    virtual bool isODE();
    // M is singular
    virtual bool isAlgebraic();
    
    virtual int getDimTimeEvent() const;
    //gibt die Time events (Startzeit und Frequenz) zuruck
    virtual void getTimeEvent(time_event_type& time_events);
    //Wird vom Solver zur Behandlung der Time events aufgerufen (wenn zero_sign[i] = 0  kein time event,zero_sign[i] = n  Anzahl von vorgekommen time events )
    virtual void handleTimeEvent(int* time_events);
    /// Set current integration time
    virtual void setTime(const double& time);
    
    // System is able to provide the Jacobian symbolically
    virtual bool provideSymbolicJacobian();
    
    virtual bool stepCompleted(double time);
    virtual bool stepStarted(double time);
    
    
    /// Provide boolean variables
    virtual void getBoolean(bool* z);
    /// Provide integer variables
    virtual void getInteger(int* z);
    /// Provide real variables
    virtual void getReal(double* z);
    /// Provide real variables
    virtual void getString(std::string* z);
    /// Provide boolean variables
    virtual void setBoolean(const bool* z);
    /// Provide integer variables
    virtual void setInteger(const int* z);
    /// Provide real variables
    virtual void setReal(const double* z);
    /// Provide real variables
    virtual void setString(const std::string* z);
    virtual bool getCondition(unsigned int index);
    
    boost::shared_ptr<IAlgLoopSolverFactory> getAlgLoopSolverFactory();
    boost::shared_ptr<ISimData> getSimData();
    
protected:
    //Methods:
    void initializeAlgloopSolverVariables();
    void initializeJacAlgloopSolverVariables();
    void deleteAlgloopSolverVariables();
    void deleteJacAlgloopSolverVariables();
    void initializeAlgloopSolverVariables_0();
    void deleteAlgloopSolverVariables_0();
    void initializeAlgloopSolverVariables_1();
    void deleteAlgloopSolverVariables_1();
    void initializeAlgloopSolverVariables_2();
    void deleteAlgloopSolverVariables_2();
    bool isConsistent();
    //Called to handle all events occured at same time
    bool handleSystemEvents(bool* events);
    //Saves all variables before an event is handled, is needed for the pre, edge and change operator
    void saveAll();
    
    void defineAlgVars();
    void defineDiscreteAlgVars();
    void defineIntAlgVars();
    void defineBoolAlgVars();
    void defineParameterRealVars();
    void defineParameterIntVars();
    void defineParameterBoolVars();
    void defineAliasRealVars();
    void defineAliasIntVars();
    void defineAliasBoolVars();
    
    void getJacobian(SparseMatrix& matrix);
    void deleteObjects();
    
    //Variables:
    boost::shared_ptr<EventHandling> _event_handling;
    boost::shared_ptr<DiscreteEvents> _discrete_events;
    
    //pointer to simVars-array to speedup simulation and compile time
    double* _pointerToRealVars;
    int* _pointerToIntVars;
    bool* _pointerToBoolVars;
    
     /*parameter real vars*/
     #define _C1_P_C _pointerToRealVars[263]
     #define _C2_P_C _pointerToRealVars[264]
     #define _C3_P_C _pointerToRealVars[265]
     #define _C4_P_C _pointerToRealVars[266]
     #define _C5_P_C _pointerToRealVars[267]
     #define _C6_P_C _pointerToRealVars[268]
     #define _C7_P_C _pointerToRealVars[269]
     #define _C8_P_C _pointerToRealVars[270]
     #define _C9_P_C _pointerToRealVars[271]
     #define _R1_P_BooleanPulse1_P_Twidth _pointerToRealVars[272]
     #define _R1_P_BooleanPulse1_P_period _pointerToRealVars[273]
     #define _R1_P_BooleanPulse1_P_startTime _pointerToRealVars[274]
     #define _R1_P_BooleanPulse1_P_width _pointerToRealVars[275]
     #define _R1_P_Capacitor1_P_C _pointerToRealVars[276]
     #define _R1_P_IdealCommutingSwitch1_P_Goff _pointerToRealVars[277]
     #define _R1_P_IdealCommutingSwitch1_P_Ron _pointerToRealVars[278]
     #define _R1_P_IdealCommutingSwitch1_P_T _pointerToRealVars[279]
     #define _R1_P_IdealCommutingSwitch2_P_Goff _pointerToRealVars[280]
     #define _R1_P_IdealCommutingSwitch2_P_Ron _pointerToRealVars[281]
     #define _R1_P_IdealCommutingSwitch2_P_T _pointerToRealVars[282]
     #define _R1_P_R _pointerToRealVars[283]
     #define _R1_P_clock _pointerToRealVars[284]
     #define _R10_P_BooleanPulse1_P_Twidth _pointerToRealVars[285]
     #define _R10_P_BooleanPulse1_P_period _pointerToRealVars[286]
     #define _R10_P_BooleanPulse1_P_startTime _pointerToRealVars[287]
     #define _R10_P_BooleanPulse1_P_width _pointerToRealVars[288]
     #define _R10_P_Capacitor1_P_C _pointerToRealVars[289]
     #define _R10_P_IdealCommutingSwitch1_P_Goff _pointerToRealVars[290]
     #define _R10_P_IdealCommutingSwitch1_P_Ron _pointerToRealVars[291]
     #define _R10_P_IdealCommutingSwitch1_P_T _pointerToRealVars[292]
     #define _R10_P_IdealCommutingSwitch2_P_Goff _pointerToRealVars[293]
     #define _R10_P_IdealCommutingSwitch2_P_Ron _pointerToRealVars[294]
     #define _R10_P_IdealCommutingSwitch2_P_T _pointerToRealVars[295]
     #define _R10_P_R _pointerToRealVars[296]
     #define _R10_P_clock _pointerToRealVars[297]
     #define _R11_P_BooleanPulse1_P_Twidth _pointerToRealVars[298]
     #define _R11_P_BooleanPulse1_P_period _pointerToRealVars[299]
     #define _R11_P_BooleanPulse1_P_startTime _pointerToRealVars[300]
     #define _R11_P_BooleanPulse1_P_width _pointerToRealVars[301]
     #define _R11_P_Capacitor1_P_C _pointerToRealVars[302]
     #define _R11_P_IdealCommutingSwitch1_P_Goff _pointerToRealVars[303]
     #define _R11_P_IdealCommutingSwitch1_P_Ron _pointerToRealVars[304]
     #define _R11_P_IdealCommutingSwitch1_P_T _pointerToRealVars[305]
     #define _R11_P_IdealCommutingSwitch2_P_Goff _pointerToRealVars[306]
     #define _R11_P_IdealCommutingSwitch2_P_Ron _pointerToRealVars[307]
     #define _R11_P_IdealCommutingSwitch2_P_T _pointerToRealVars[308]
     #define _R11_P_R _pointerToRealVars[309]
     #define _R11_P_clock _pointerToRealVars[310]
     #define _R2_P_BooleanPulse1_P_Twidth _pointerToRealVars[311]
     #define _R2_P_BooleanPulse1_P_period _pointerToRealVars[312]
     #define _R2_P_BooleanPulse1_P_startTime _pointerToRealVars[313]
     #define _R2_P_BooleanPulse1_P_width _pointerToRealVars[314]
     #define _R2_P_Capacitor1_P_C _pointerToRealVars[315]
     #define _R2_P_IdealCommutingSwitch1_P_Goff _pointerToRealVars[316]
     #define _R2_P_IdealCommutingSwitch1_P_Ron _pointerToRealVars[317]
     #define _R2_P_IdealCommutingSwitch1_P_T _pointerToRealVars[318]
     #define _R2_P_IdealCommutingSwitch2_P_Goff _pointerToRealVars[319]
     #define _R2_P_IdealCommutingSwitch2_P_Ron _pointerToRealVars[320]
     #define _R2_P_IdealCommutingSwitch2_P_T _pointerToRealVars[321]
     #define _R2_P_R _pointerToRealVars[322]
     #define _R2_P_clock _pointerToRealVars[323]
     #define _R3_P_BooleanPulse1_P_Twidth _pointerToRealVars[324]
     #define _R3_P_BooleanPulse1_P_period _pointerToRealVars[325]
     #define _R3_P_BooleanPulse1_P_startTime _pointerToRealVars[326]
     #define _R3_P_BooleanPulse1_P_width _pointerToRealVars[327]
     #define _R3_P_Capacitor1_P_C _pointerToRealVars[328]
     #define _R3_P_IdealCommutingSwitch1_P_Goff _pointerToRealVars[329]
     #define _R3_P_IdealCommutingSwitch1_P_Ron _pointerToRealVars[330]
     #define _R3_P_IdealCommutingSwitch1_P_T _pointerToRealVars[331]
     #define _R3_P_IdealCommutingSwitch2_P_Goff _pointerToRealVars[332]
     #define _R3_P_IdealCommutingSwitch2_P_Ron _pointerToRealVars[333]
     #define _R3_P_IdealCommutingSwitch2_P_T _pointerToRealVars[334]
     #define _R3_P_R _pointerToRealVars[335]
     #define _R3_P_clock _pointerToRealVars[336]
     #define _R4_P_BooleanPulse1_P_Twidth _pointerToRealVars[337]
     #define _R4_P_BooleanPulse1_P_period _pointerToRealVars[338]
     #define _R4_P_BooleanPulse1_P_startTime _pointerToRealVars[339]
     #define _R4_P_BooleanPulse1_P_width _pointerToRealVars[340]
     #define _R4_P_Capacitor1_P_C _pointerToRealVars[341]
     #define _R4_P_IdealCommutingSwitch1_P_Goff _pointerToRealVars[342]
     #define _R4_P_IdealCommutingSwitch1_P_Ron _pointerToRealVars[343]
     #define _R4_P_IdealCommutingSwitch1_P_T _pointerToRealVars[344]
     #define _R4_P_IdealCommutingSwitch2_P_Goff _pointerToRealVars[345]
     #define _R4_P_IdealCommutingSwitch2_P_Ron _pointerToRealVars[346]
     #define _R4_P_IdealCommutingSwitch2_P_T _pointerToRealVars[347]
     #define _R4_P_R _pointerToRealVars[348]
     #define _R4_P_clock _pointerToRealVars[349]
     #define _R5_P_BooleanPulse1_P_Twidth _pointerToRealVars[350]
     #define _R5_P_BooleanPulse1_P_period _pointerToRealVars[351]
     #define _R5_P_BooleanPulse1_P_startTime _pointerToRealVars[352]
     #define _R5_P_BooleanPulse1_P_width _pointerToRealVars[353]
     #define _R5_P_Capacitor1_P_C _pointerToRealVars[354]
     #define _R5_P_IdealCommutingSwitch1_P_Goff _pointerToRealVars[355]
     #define _R5_P_IdealCommutingSwitch1_P_Ron _pointerToRealVars[356]
     #define _R5_P_IdealCommutingSwitch1_P_T _pointerToRealVars[357]
     #define _R5_P_IdealCommutingSwitch2_P_Goff _pointerToRealVars[358]
     #define _R5_P_IdealCommutingSwitch2_P_Ron _pointerToRealVars[359]
     #define _R5_P_IdealCommutingSwitch2_P_T _pointerToRealVars[360]
     #define _R5_P_R _pointerToRealVars[361]
     #define _R5_P_clock _pointerToRealVars[362]
     #define _R7_P_BooleanPulse1_P_Twidth _pointerToRealVars[363]
     #define _R7_P_BooleanPulse1_P_period _pointerToRealVars[364]
     #define _R7_P_BooleanPulse1_P_startTime _pointerToRealVars[365]
     #define _R7_P_BooleanPulse1_P_width _pointerToRealVars[366]
     #define _R7_P_Capacitor1_P_C _pointerToRealVars[367]
     #define _R7_P_IdealCommutingSwitch1_P_Goff _pointerToRealVars[368]
     #define _R7_P_IdealCommutingSwitch1_P_Ron _pointerToRealVars[369]
     #define _R7_P_IdealCommutingSwitch1_P_T _pointerToRealVars[370]
     #define _R7_P_IdealCommutingSwitch2_P_Goff _pointerToRealVars[371]
     #define _R7_P_IdealCommutingSwitch2_P_Ron _pointerToRealVars[372]
     #define _R7_P_IdealCommutingSwitch2_P_T _pointerToRealVars[373]
     #define _R7_P_R _pointerToRealVars[374]
     #define _R7_P_clock _pointerToRealVars[375]
     #define _R8_P_BooleanPulse1_P_Twidth _pointerToRealVars[376]
     #define _R8_P_BooleanPulse1_P_period _pointerToRealVars[377]
     #define _R8_P_BooleanPulse1_P_startTime _pointerToRealVars[378]
     #define _R8_P_BooleanPulse1_P_width _pointerToRealVars[379]
     #define _R8_P_Capacitor1_P_C _pointerToRealVars[380]
     #define _R8_P_IdealCommutingSwitch1_P_Goff _pointerToRealVars[381]
     #define _R8_P_IdealCommutingSwitch1_P_Ron _pointerToRealVars[382]
     #define _R8_P_IdealCommutingSwitch1_P_T _pointerToRealVars[383]
     #define _R8_P_IdealCommutingSwitch2_P_Goff _pointerToRealVars[384]
     #define _R8_P_IdealCommutingSwitch2_P_Ron _pointerToRealVars[385]
     #define _R8_P_IdealCommutingSwitch2_P_T _pointerToRealVars[386]
     #define _R8_P_R _pointerToRealVars[387]
     #define _R8_P_clock _pointerToRealVars[388]
     #define _R9_P_BooleanPulse1_P_Twidth _pointerToRealVars[389]
     #define _R9_P_BooleanPulse1_P_period _pointerToRealVars[390]
     #define _R9_P_BooleanPulse1_P_startTime _pointerToRealVars[391]
     #define _R9_P_BooleanPulse1_P_width _pointerToRealVars[392]
     #define _R9_P_Capacitor1_P_C _pointerToRealVars[393]
     #define _R9_P_IdealCommutingSwitch1_P_Goff _pointerToRealVars[394]
     #define _R9_P_IdealCommutingSwitch1_P_Ron _pointerToRealVars[395]
     #define _R9_P_IdealCommutingSwitch1_P_T _pointerToRealVars[396]
     #define _R9_P_IdealCommutingSwitch2_P_Goff _pointerToRealVars[397]
     #define _R9_P_IdealCommutingSwitch2_P_Ron _pointerToRealVars[398]
     #define _R9_P_IdealCommutingSwitch2_P_T _pointerToRealVars[399]
     #define _R9_P_R _pointerToRealVars[400]
     #define _R9_P_clock _pointerToRealVars[401]
     #define _Rp1_P_BooleanPulse1_P_Twidth _pointerToRealVars[402]
     #define _Rp1_P_BooleanPulse1_P_period _pointerToRealVars[403]
     #define _Rp1_P_BooleanPulse1_P_startTime _pointerToRealVars[404]
     #define _Rp1_P_BooleanPulse1_P_width _pointerToRealVars[405]
     #define _Rp1_P_Capacitor1_P_C _pointerToRealVars[406]
     #define _Rp1_P_IdealCommutingSwitch1_P_Goff _pointerToRealVars[407]
     #define _Rp1_P_IdealCommutingSwitch1_P_Ron _pointerToRealVars[408]
     #define _Rp1_P_IdealCommutingSwitch1_P_T _pointerToRealVars[409]
     #define _Rp1_P_IdealCommutingSwitch2_P_Goff _pointerToRealVars[410]
     #define _Rp1_P_IdealCommutingSwitch2_P_Ron _pointerToRealVars[411]
     #define _Rp1_P_IdealCommutingSwitch2_P_T _pointerToRealVars[412]
     #define _Rp1_P_R _pointerToRealVars[413]
     #define _Rp1_P_clock _pointerToRealVars[414]
     #define _V_P_V _pointerToRealVars[415]
     #define _V_P_offset _pointerToRealVars[416]
     #define _V_P_signalSource_P_height _pointerToRealVars[417]
     #define _V_P_signalSource_P_offset _pointerToRealVars[418]
     #define _V_P_signalSource_P_startTime _pointerToRealVars[419]
     #define _V_P_startTime _pointerToRealVars[420]
     #define _c1 _pointerToRealVars[421]
     #define _c2 _pointerToRealVars[422]
     #define _c3 _pointerToRealVars[423]
     #define _c4 _pointerToRealVars[424]
     #define _c5 _pointerToRealVars[425]
     #define _l1 _pointerToRealVars[426]
     #define _l2 _pointerToRealVars[427]
     /*parameter int vars*/
     /*parameter bool vars*/
     #define _R1_P_IdealCommutingSwitch1_P_useHeatPort _pointerToBoolVars[22]
     #define _R1_P_IdealCommutingSwitch2_P_useHeatPort _pointerToBoolVars[23]
     #define _R10_P_IdealCommutingSwitch1_P_useHeatPort _pointerToBoolVars[24]
     #define _R10_P_IdealCommutingSwitch2_P_useHeatPort _pointerToBoolVars[25]
     #define _R11_P_IdealCommutingSwitch1_P_useHeatPort _pointerToBoolVars[26]
     #define _R11_P_IdealCommutingSwitch2_P_useHeatPort _pointerToBoolVars[27]
     #define _R2_P_IdealCommutingSwitch1_P_useHeatPort _pointerToBoolVars[28]
     #define _R2_P_IdealCommutingSwitch2_P_useHeatPort _pointerToBoolVars[29]
     #define _R3_P_IdealCommutingSwitch1_P_useHeatPort _pointerToBoolVars[30]
     #define _R3_P_IdealCommutingSwitch2_P_useHeatPort _pointerToBoolVars[31]
     #define _R4_P_IdealCommutingSwitch1_P_useHeatPort _pointerToBoolVars[32]
     #define _R4_P_IdealCommutingSwitch2_P_useHeatPort _pointerToBoolVars[33]
     #define _R5_P_IdealCommutingSwitch1_P_useHeatPort _pointerToBoolVars[34]
     #define _R5_P_IdealCommutingSwitch2_P_useHeatPort _pointerToBoolVars[35]
     #define _R7_P_IdealCommutingSwitch1_P_useHeatPort _pointerToBoolVars[36]
     #define _R7_P_IdealCommutingSwitch2_P_useHeatPort _pointerToBoolVars[37]
     #define _R8_P_IdealCommutingSwitch1_P_useHeatPort _pointerToBoolVars[38]
     #define _R8_P_IdealCommutingSwitch2_P_useHeatPort _pointerToBoolVars[39]
     #define _R9_P_IdealCommutingSwitch1_P_useHeatPort _pointerToBoolVars[40]
     #define _R9_P_IdealCommutingSwitch2_P_useHeatPort _pointerToBoolVars[41]
     #define _Rp1_P_IdealCommutingSwitch1_P_useHeatPort _pointerToBoolVars[42]
     #define _Rp1_P_IdealCommutingSwitch2_P_useHeatPort _pointerToBoolVars[43]
    /*string parameter variables*/
     /*string alias variables*/
     /*external variables*/
     /*alias real vars*/
     #define _C1_P_n_P_i _pointerToRealVars[32]
     #define _C1_P_n_P_v _pointerToRealVars[0]
     #define _C1_P_p_P_i _pointerToRealVars[32]
     #define _C1_P_p_P_v _pointerToRealVars[42]
     #define _C2_P_n_P_i _pointerToRealVars[33]
     #define _C2_P_n_P_v _pointerToRealVars[42]
     #define _C2_P_p_P_i _pointerToRealVars[33]
     #define _C2_P_p_P_v _pointerToRealVars[1]
     #define _C3_P_n_P_i _pointerToRealVars[34]
     #define _C3_P_n_P_v _pointerToRealVars[2]
     #define _C3_P_p_P_i _pointerToRealVars[34]
     #define _C3_P_p_P_v _pointerToRealVars[44]
     #define _C4_P_n_P_i _pointerToRealVars[35]
     #define _C4_P_n_P_v _pointerToRealVars[46]
     #define _C4_P_p_P_i _pointerToRealVars[35]
     #define _C4_P_p_P_v _pointerToRealVars[3]
     #define _C5_P_n_P_i _pointerToRealVars[36]
     #define _C5_P_n_P_v _pointerToRealVars[46]
     #define _C5_P_p_P_i _pointerToRealVars[36]
     #define _C5_P_p_P_v _pointerToRealVars[0]
     #define _C5_P_v _pointerToRealVars[0]
     #define _C6_P_n_P_i _pointerToRealVars[37]
     #define _C6_P_n_P_v _pointerToRealVars[1]
     #define _C6_P_p_P_i _pointerToRealVars[37]
     #define _C6_P_p_P_v _pointerToRealVars[46]
     #define _C6_P_v _pointerToRealVars[1]
     #define _C7_P_n_P_i _pointerToRealVars[38]
     #define _C7_P_n_P_v _pointerToRealVars[4]
     #define _C7_P_p_P_i _pointerToRealVars[38]
     #define _C7_P_p_P_v _pointerToRealVars[48]
     #define _C8_P_n_P_i _pointerToRealVars[39]
     #define _C8_P_n_P_v _pointerToRealVars[50]
     #define _C8_P_p_P_i _pointerToRealVars[39]
     #define _C8_P_p_P_v _pointerToRealVars[1]
     #define _C8_P_v _pointerToRealVars[1]
     #define _C9_P_n_P_i _pointerToRealVars[40]
     #define _C9_P_n_P_v _pointerToRealVars[3]
     #define _C9_P_p_P_i _pointerToRealVars[40]
     #define _C9_P_p_P_v _pointerToRealVars[50]
     #define _C9_P_v _pointerToRealVars[3]
     #define _Ground1_P_p_P_i _pointerToRealVars[231]
     #define _Op1_P_in_n_P_v _pointerToRealVars[42]
     #define _Op1_P_in_p_P_v _pointerToRealVars[42]
     #define _Op1_P_out_P_v _pointerToRealVars[0]
     #define _Op2_P_in_n_P_v _pointerToRealVars[44]
     #define _Op2_P_in_p_P_v _pointerToRealVars[44]
     #define _Op2_P_out_P_v _pointerToRealVars[2]
     #define _Op3_P_in_n_P_v _pointerToRealVars[46]
     #define _Op3_P_in_p_P_v _pointerToRealVars[46]
     #define _Op3_P_out_P_v _pointerToRealVars[1]
     #define _Op4_P_in_n_P_v _pointerToRealVars[48]
     #define _Op4_P_in_p_P_v _pointerToRealVars[48]
     #define _Op4_P_out_P_v _pointerToRealVars[4]
     #define _Op5_P_in_n_P_v _pointerToRealVars[50]
     #define _Op5_P_in_p_P_v _pointerToRealVars[50]
     #define _Op5_P_out_P_v _pointerToRealVars[3]
     #define _R1_P_Capacitor1_P_n_P_i _pointerToRealVars[67]
     #define _R1_P_Capacitor1_P_p_P_i _pointerToRealVars[67]
     #define _R1_P_Ground1_P_p_P_i _pointerToRealVars[73]
     #define _R1_P_Ground2_P_p_P_i _pointerToRealVars[77]
     #define _R1_P_IdealCommutingSwitch1_P_T_heatPort _pointerToRealVars[279]
     #define _R1_P_IdealCommutingSwitch1_P_n1_P_i _pointerToRealVars[231]
     #define _R1_P_IdealCommutingSwitch1_P_n1_P_v _pointerToRealVars[232]
     #define _R1_P_IdealCommutingSwitch1_P_n2_P_v _pointerToRealVars[70]
     #define _R1_P_IdealCommutingSwitch1_P_p_P_i _pointerToRealVars[67]
     #define _R1_P_IdealCommutingSwitch1_P_p_P_v _pointerToRealVars[69]
     #define _R1_P_IdealCommutingSwitch2_P_T_heatPort _pointerToRealVars[282]
     #define _R1_P_IdealCommutingSwitch2_P_n1_P_i _pointerToRealVars[80]
     #define _R1_P_IdealCommutingSwitch2_P_n1_P_v _pointerToRealVars[42]
     #define _R1_P_IdealCommutingSwitch2_P_n2_P_v _pointerToRealVars[71]
     #define _R1_P_IdealCommutingSwitch2_P_p_P_i _pointerToRealVars[67]
     #define _R1_P_IdealCommutingSwitch2_P_p_P_v _pointerToRealVars[68]
     #define _R1_P_n1_P_i _pointerToRealVars[231]
     #define _R1_P_n1_P_v _pointerToRealVars[232]
     #define _R1_P_n2_P_v _pointerToRealVars[42]
     #define _R10_P_Capacitor1_P_n_P_i _pointerToRealVars[81]
     #define _R10_P_Capacitor1_P_p_P_i _pointerToRealVars[81]
     #define _R10_P_Ground1_P_p_P_i _pointerToRealVars[87]
     #define _R10_P_Ground2_P_p_P_i _pointerToRealVars[91]
     #define _R10_P_IdealCommutingSwitch1_P_T_heatPort _pointerToRealVars[292]
     #define _R10_P_IdealCommutingSwitch1_P_n1_P_i _pointerToRealVars[94]
     #define _R10_P_IdealCommutingSwitch1_P_n1_P_v _pointerToRealVars[4]
     #define _R10_P_IdealCommutingSwitch1_P_n2_P_v _pointerToRealVars[84]
     #define _R10_P_IdealCommutingSwitch1_P_p_P_i _pointerToRealVars[81]
     #define _R10_P_IdealCommutingSwitch1_P_p_P_v _pointerToRealVars[83]
     #define _R10_P_IdealCommutingSwitch2_P_T_heatPort _pointerToRealVars[295]
     #define _R10_P_IdealCommutingSwitch2_P_n1_P_i _pointerToRealVars[95]
     #define _R10_P_IdealCommutingSwitch2_P_n1_P_v _pointerToRealVars[50]
     #define _R10_P_IdealCommutingSwitch2_P_n2_P_v _pointerToRealVars[85]
     #define _R10_P_IdealCommutingSwitch2_P_p_P_i _pointerToRealVars[81]
     #define _R10_P_IdealCommutingSwitch2_P_p_P_v _pointerToRealVars[82]
     #define _R10_P_n1_P_v _pointerToRealVars[4]
     #define _R10_P_n2_P_v _pointerToRealVars[50]
     #define _R11_P_Capacitor1_P_n_P_i _pointerToRealVars[96]
     #define _R11_P_Capacitor1_P_p_P_i _pointerToRealVars[96]
     #define _R11_P_Ground1_P_p_P_i _pointerToRealVars[102]
     #define _R11_P_Ground2_P_p_P_i _pointerToRealVars[106]
     #define _R11_P_IdealCommutingSwitch1_P_T_heatPort _pointerToRealVars[305]
     #define _R11_P_IdealCommutingSwitch1_P_n1_P_i _pointerToRealVars[109]
     #define _R11_P_IdealCommutingSwitch1_P_n1_P_v _pointerToRealVars[50]
     #define _R11_P_IdealCommutingSwitch1_P_n2_P_v _pointerToRealVars[99]
     #define _R11_P_IdealCommutingSwitch1_P_p_P_i _pointerToRealVars[96]
     #define _R11_P_IdealCommutingSwitch1_P_p_P_v _pointerToRealVars[98]
     #define _R11_P_IdealCommutingSwitch2_P_T_heatPort _pointerToRealVars[308]
     #define _R11_P_IdealCommutingSwitch2_P_n1_P_i _pointerToRealVars[110]
     #define _R11_P_IdealCommutingSwitch2_P_n1_P_v _pointerToRealVars[3]
     #define _R11_P_IdealCommutingSwitch2_P_n2_P_v _pointerToRealVars[100]
     #define _R11_P_IdealCommutingSwitch2_P_p_P_i _pointerToRealVars[96]
     #define _R11_P_IdealCommutingSwitch2_P_p_P_v _pointerToRealVars[97]
     #define _R11_P_n1_P_v _pointerToRealVars[50]
     #define _R11_P_n2_P_v _pointerToRealVars[3]
     #define _R2_P_Capacitor1_P_n_P_i _pointerToRealVars[111]
     #define _R2_P_Capacitor1_P_p_P_i _pointerToRealVars[111]
     #define _R2_P_Ground1_P_p_P_i _pointerToRealVars[117]
     #define _R2_P_Ground2_P_p_P_i _pointerToRealVars[121]
     #define _R2_P_IdealCommutingSwitch1_P_T_heatPort _pointerToRealVars[318]
     #define _R2_P_IdealCommutingSwitch1_P_n1_P_i _pointerToRealVars[124]
     #define _R2_P_IdealCommutingSwitch1_P_n1_P_v _pointerToRealVars[2]
     #define _R2_P_IdealCommutingSwitch1_P_n2_P_v _pointerToRealVars[114]
     #define _R2_P_IdealCommutingSwitch1_P_p_P_i _pointerToRealVars[111]
     #define _R2_P_IdealCommutingSwitch1_P_p_P_v _pointerToRealVars[113]
     #define _R2_P_IdealCommutingSwitch2_P_T_heatPort _pointerToRealVars[321]
     #define _R2_P_IdealCommutingSwitch2_P_n1_P_i _pointerToRealVars[125]
     #define _R2_P_IdealCommutingSwitch2_P_n1_P_v _pointerToRealVars[42]
     #define _R2_P_IdealCommutingSwitch2_P_n2_P_v _pointerToRealVars[115]
     #define _R2_P_IdealCommutingSwitch2_P_p_P_i _pointerToRealVars[111]
     #define _R2_P_IdealCommutingSwitch2_P_p_P_v _pointerToRealVars[112]
     #define _R2_P_n1_P_v _pointerToRealVars[2]
     #define _R2_P_n2_P_v _pointerToRealVars[42]
     #define _R3_P_Capacitor1_P_n_P_i _pointerToRealVars[126]
     #define _R3_P_Capacitor1_P_p_P_i _pointerToRealVars[126]
     #define _R3_P_Ground1_P_p_P_i _pointerToRealVars[132]
     #define _R3_P_Ground2_P_p_P_i _pointerToRealVars[136]
     #define _R3_P_IdealCommutingSwitch1_P_T_heatPort _pointerToRealVars[331]
     #define _R3_P_IdealCommutingSwitch1_P_n1_P_i _pointerToRealVars[139]
     #define _R3_P_IdealCommutingSwitch1_P_n1_P_v _pointerToRealVars[42]
     #define _R3_P_IdealCommutingSwitch1_P_n2_P_v _pointerToRealVars[129]
     #define _R3_P_IdealCommutingSwitch1_P_p_P_i _pointerToRealVars[126]
     #define _R3_P_IdealCommutingSwitch1_P_p_P_v _pointerToRealVars[128]
     #define _R3_P_IdealCommutingSwitch2_P_T_heatPort _pointerToRealVars[334]
     #define _R3_P_IdealCommutingSwitch2_P_n1_P_i _pointerToRealVars[140]
     #define _R3_P_IdealCommutingSwitch2_P_n1_P_v _pointerToRealVars[0]
     #define _R3_P_IdealCommutingSwitch2_P_n2_P_v _pointerToRealVars[130]
     #define _R3_P_IdealCommutingSwitch2_P_p_P_i _pointerToRealVars[126]
     #define _R3_P_IdealCommutingSwitch2_P_p_P_v _pointerToRealVars[127]
     #define _R3_P_n1_P_v _pointerToRealVars[42]
     #define _R3_P_n2_P_v _pointerToRealVars[0]
     #define _R4_P_Capacitor1_P_n_P_i _pointerToRealVars[141]
     #define _R4_P_Capacitor1_P_p_P_i _pointerToRealVars[141]
     #define _R4_P_Ground2_P_p_P_i _pointerToRealVars[151]
     #define _R4_P_IdealCommutingSwitch1_P_T_heatPort _pointerToRealVars[344]
     #define _R4_P_IdealCommutingSwitch1_P_n1_P_i _pointerToRealVars[144]
     #define _R4_P_IdealCommutingSwitch1_P_n1_P_v _pointerToRealVars[145]
     #define _R4_P_IdealCommutingSwitch1_P_n2_P_i _pointerToRealVars[154]
     #define _R4_P_IdealCommutingSwitch1_P_n2_P_v _pointerToRealVars[0]
     #define _R4_P_IdealCommutingSwitch1_P_p_P_i _pointerToRealVars[141]
     #define _R4_P_IdealCommutingSwitch1_P_p_P_v _pointerToRealVars[143]
     #define _R4_P_IdealCommutingSwitch2_P_T_heatPort _pointerToRealVars[347]
     #define _R4_P_IdealCommutingSwitch2_P_n1_P_i _pointerToRealVars[155]
     #define _R4_P_IdealCommutingSwitch2_P_n1_P_v _pointerToRealVars[44]
     #define _R4_P_IdealCommutingSwitch2_P_n2_P_v _pointerToRealVars[146]
     #define _R4_P_IdealCommutingSwitch2_P_p_P_i _pointerToRealVars[141]
     #define _R4_P_IdealCommutingSwitch2_P_p_P_v _pointerToRealVars[142]
     #define _R4_P_n1_P_v _pointerToRealVars[0]
     #define _R4_P_n2_P_v _pointerToRealVars[44]
     #define _R5_P_Capacitor1_P_n_P_i _pointerToRealVars[156]
     #define _R5_P_Capacitor1_P_p_P_i _pointerToRealVars[156]
     #define _R5_P_Ground1_P_p_P_i _pointerToRealVars[162]
     #define _R5_P_Ground2_P_p_P_i _pointerToRealVars[166]
     #define _R5_P_IdealCommutingSwitch1_P_T_heatPort _pointerToRealVars[357]
     #define _R5_P_IdealCommutingSwitch1_P_n1_P_v _pointerToRealVars[159]
     #define _R5_P_IdealCommutingSwitch1_P_n2_P_i _pointerToRealVars[169]
     #define _R5_P_IdealCommutingSwitch1_P_n2_P_v _pointerToRealVars[1]
     #define _R5_P_IdealCommutingSwitch1_P_p_P_i _pointerToRealVars[156]
     #define _R5_P_IdealCommutingSwitch1_P_p_P_v _pointerToRealVars[158]
     #define _R5_P_IdealCommutingSwitch2_P_T_heatPort _pointerToRealVars[360]
     #define _R5_P_IdealCommutingSwitch2_P_n1_P_i _pointerToRealVars[170]
     #define _R5_P_IdealCommutingSwitch2_P_n1_P_v _pointerToRealVars[44]
     #define _R5_P_IdealCommutingSwitch2_P_n2_P_v _pointerToRealVars[160]
     #define _R5_P_IdealCommutingSwitch2_P_p_P_i _pointerToRealVars[156]
     #define _R5_P_IdealCommutingSwitch2_P_p_P_v _pointerToRealVars[157]
     #define _R5_P_n1_P_v _pointerToRealVars[1]
     #define _R5_P_n2_P_v _pointerToRealVars[44]
     #define _R7_P_Capacitor1_P_n_P_i _pointerToRealVars[171]
     #define _R7_P_Capacitor1_P_p_P_i _pointerToRealVars[171]
     #define _R7_P_Ground1_P_p_P_i _pointerToRealVars[177]
     #define _R7_P_Ground2_P_p_P_i _pointerToRealVars[181]
     #define _R7_P_IdealCommutingSwitch1_P_T_heatPort _pointerToRealVars[370]
     #define _R7_P_IdealCommutingSwitch1_P_n1_P_i _pointerToRealVars[184]
     #define _R7_P_IdealCommutingSwitch1_P_n1_P_v _pointerToRealVars[2]
     #define _R7_P_IdealCommutingSwitch1_P_n2_P_v _pointerToRealVars[174]
     #define _R7_P_IdealCommutingSwitch1_P_p_P_i _pointerToRealVars[171]
     #define _R7_P_IdealCommutingSwitch1_P_p_P_v _pointerToRealVars[173]
     #define _R7_P_IdealCommutingSwitch2_P_T_heatPort _pointerToRealVars[373]
     #define _R7_P_IdealCommutingSwitch2_P_n1_P_i _pointerToRealVars[185]
     #define _R7_P_IdealCommutingSwitch2_P_n1_P_v _pointerToRealVars[46]
     #define _R7_P_IdealCommutingSwitch2_P_n2_P_v _pointerToRealVars[175]
     #define _R7_P_IdealCommutingSwitch2_P_p_P_i _pointerToRealVars[171]
     #define _R7_P_IdealCommutingSwitch2_P_p_P_v _pointerToRealVars[172]
     #define _R7_P_n1_P_v _pointerToRealVars[2]
     #define _R7_P_n2_P_v _pointerToRealVars[46]
     #define _R8_P_Capacitor1_P_n_P_i _pointerToRealVars[186]
     #define _R8_P_Capacitor1_P_p_P_i _pointerToRealVars[186]
     #define _R8_P_Ground1_P_p_P_i _pointerToRealVars[192]
     #define _R8_P_Ground2_P_p_P_i _pointerToRealVars[196]
     #define _R8_P_IdealCommutingSwitch1_P_T_heatPort _pointerToRealVars[383]
     #define _R8_P_IdealCommutingSwitch1_P_n1_P_v _pointerToRealVars[189]
     #define _R8_P_IdealCommutingSwitch1_P_n2_P_i _pointerToRealVars[199]
     #define _R8_P_IdealCommutingSwitch1_P_n2_P_v _pointerToRealVars[3]
     #define _R8_P_IdealCommutingSwitch1_P_p_P_i _pointerToRealVars[186]
     #define _R8_P_IdealCommutingSwitch1_P_p_P_v _pointerToRealVars[188]
     #define _R8_P_IdealCommutingSwitch2_P_T_heatPort _pointerToRealVars[386]
     #define _R8_P_IdealCommutingSwitch2_P_n1_P_i _pointerToRealVars[200]
     #define _R8_P_IdealCommutingSwitch2_P_n1_P_v _pointerToRealVars[48]
     #define _R8_P_IdealCommutingSwitch2_P_n2_P_v _pointerToRealVars[190]
     #define _R8_P_IdealCommutingSwitch2_P_p_P_i _pointerToRealVars[186]
     #define _R8_P_IdealCommutingSwitch2_P_p_P_v _pointerToRealVars[187]
     #define _R8_P_n1_P_v _pointerToRealVars[3]
     #define _R8_P_n2_P_v _pointerToRealVars[48]
     #define _R9_P_Capacitor1_P_n_P_i _pointerToRealVars[201]
     #define _R9_P_Capacitor1_P_p_P_i _pointerToRealVars[201]
     #define _R9_P_Ground1_P_p_P_i _pointerToRealVars[207]
     #define _R9_P_Ground2_P_p_P_i _pointerToRealVars[211]
     #define _R9_P_IdealCommutingSwitch1_P_T_heatPort _pointerToRealVars[396]
     #define _R9_P_IdealCommutingSwitch1_P_n1_P_v _pointerToRealVars[204]
     #define _R9_P_IdealCommutingSwitch1_P_n2_P_i _pointerToRealVars[214]
     #define _R9_P_IdealCommutingSwitch1_P_n2_P_v _pointerToRealVars[1]
     #define _R9_P_IdealCommutingSwitch1_P_p_P_i _pointerToRealVars[201]
     #define _R9_P_IdealCommutingSwitch1_P_p_P_v _pointerToRealVars[203]
     #define _R9_P_IdealCommutingSwitch2_P_T_heatPort _pointerToRealVars[399]
     #define _R9_P_IdealCommutingSwitch2_P_n1_P_i _pointerToRealVars[215]
     #define _R9_P_IdealCommutingSwitch2_P_n1_P_v _pointerToRealVars[48]
     #define _R9_P_IdealCommutingSwitch2_P_n2_P_v _pointerToRealVars[205]
     #define _R9_P_IdealCommutingSwitch2_P_p_P_i _pointerToRealVars[201]
     #define _R9_P_IdealCommutingSwitch2_P_p_P_v _pointerToRealVars[202]
     #define _R9_P_n1_P_v _pointerToRealVars[1]
     #define _R9_P_n2_P_v _pointerToRealVars[48]
     #define _Rp1_P_Capacitor1_P_n_P_i _pointerToRealVars[216]
     #define _Rp1_P_Capacitor1_P_p_P_i _pointerToRealVars[216]
     #define _Rp1_P_Ground1_P_p_P_i _pointerToRealVars[222]
     #define _Rp1_P_Ground2_P_p_P_i _pointerToRealVars[226]
     #define _Rp1_P_IdealCommutingSwitch1_P_T_heatPort _pointerToRealVars[409]
     #define _Rp1_P_IdealCommutingSwitch1_P_n1_P_i _pointerToRealVars[229]
     #define _Rp1_P_IdealCommutingSwitch1_P_n1_P_v _pointerToRealVars[4]
     #define _Rp1_P_IdealCommutingSwitch1_P_n2_P_v _pointerToRealVars[219]
     #define _Rp1_P_IdealCommutingSwitch1_P_p_P_i _pointerToRealVars[216]
     #define _Rp1_P_IdealCommutingSwitch1_P_p_P_v _pointerToRealVars[218]
     #define _Rp1_P_IdealCommutingSwitch2_P_T_heatPort _pointerToRealVars[412]
     #define _Rp1_P_IdealCommutingSwitch2_P_n1_P_i _pointerToRealVars[230]
     #define _Rp1_P_IdealCommutingSwitch2_P_n1_P_v _pointerToRealVars[46]
     #define _Rp1_P_IdealCommutingSwitch2_P_n2_P_v _pointerToRealVars[220]
     #define _Rp1_P_IdealCommutingSwitch2_P_p_P_i _pointerToRealVars[216]
     #define _Rp1_P_IdealCommutingSwitch2_P_p_P_v _pointerToRealVars[217]
     #define _Rp1_P_n1_P_v _pointerToRealVars[4]
     #define _Rp1_P_n2_P_v _pointerToRealVars[46]
     #define _V_P_n_P_i _pointerToRealVars[231]
     #define _V_P_n_P_v _pointerToRealVars[232]
     #define _V_P_p_P_i _pointerToRealVars[231]
     #define _V_P_p_P_v _pointerToRealVars[51]
     #define _V_P_signalSource_P_y _pointerToRealVars[232]
     #define _n1_P_v _pointerToRealVars[42]
     #define _n10_P_v _pointerToRealVars[48]
     #define _n11_P_v _pointerToRealVars[4]
     #define _n12_P_v _pointerToRealVars[3]
     #define _n13_P_v _pointerToRealVars[3]
     #define _n14_P_v _pointerToRealVars[50]
     #define _n2_P_v _pointerToRealVars[42]
     #define _n3_P_v _pointerToRealVars[42]
     #define _n4_P_v _pointerToRealVars[0]
     #define _n5_P_v _pointerToRealVars[44]
     #define _n6_P_v _pointerToRealVars[2]
     #define _n7_P_v _pointerToRealVars[46]
     #define _n8_P_v _pointerToRealVars[46]
     #define _n9_P_v _pointerToRealVars[48]
     #define _out1_P_v _pointerToRealVars[1]
     #define _p1_P_v _pointerToRealVars[1]
     #define _p2_P_v _pointerToRealVars[46]
     #define _p3_P_v _pointerToRealVars[3]
     #define _p4_P_v _pointerToRealVars[50]
     /*alias int vars*/
      /*alias bool vars*/
     #define _R1_P_IdealCommutingSwitch1_P_control _pointerToBoolVars[11]
     #define _R1_P_IdealCommutingSwitch2_P_control _pointerToBoolVars[11]
     #define _R10_P_IdealCommutingSwitch1_P_control _pointerToBoolVars[12]
     #define _R10_P_IdealCommutingSwitch2_P_control _pointerToBoolVars[12]
     #define _R11_P_IdealCommutingSwitch1_P_control _pointerToBoolVars[13]
     #define _R11_P_IdealCommutingSwitch2_P_control _pointerToBoolVars[13]
     #define _R2_P_IdealCommutingSwitch1_P_control _pointerToBoolVars[14]
     #define _R2_P_IdealCommutingSwitch2_P_control _pointerToBoolVars[14]
     #define _R3_P_IdealCommutingSwitch1_P_control _pointerToBoolVars[15]
     #define _R3_P_IdealCommutingSwitch2_P_control _pointerToBoolVars[15]
     #define _R4_P_IdealCommutingSwitch1_P_control _pointerToBoolVars[16]
     #define _R4_P_IdealCommutingSwitch2_P_control _pointerToBoolVars[16]
     #define _R5_P_IdealCommutingSwitch1_P_control _pointerToBoolVars[17]
     #define _R5_P_IdealCommutingSwitch2_P_control _pointerToBoolVars[17]
     #define _R7_P_IdealCommutingSwitch1_P_control _pointerToBoolVars[18]
     #define _R7_P_IdealCommutingSwitch2_P_control _pointerToBoolVars[18]
     #define _R8_P_IdealCommutingSwitch1_P_control _pointerToBoolVars[19]
     #define _R8_P_IdealCommutingSwitch2_P_control _pointerToBoolVars[19]
     #define _R9_P_IdealCommutingSwitch1_P_control _pointerToBoolVars[20]
     #define _R9_P_IdealCommutingSwitch2_P_control _pointerToBoolVars[20]
     #define _Rp1_P_IdealCommutingSwitch1_P_control _pointerToBoolVars[21]
     #define _Rp1_P_IdealCommutingSwitch2_P_control _pointerToBoolVars[21]
     /*string algvars*/
    //Variables saved for pre, edge and change operator
     /*real algvars*/
    #define _C1_P_i _pointerToRealVars[32]
    #define _C2_P_i _pointerToRealVars[33]
    #define _C3_P_i _pointerToRealVars[34]
    #define _C4_P_i _pointerToRealVars[35]
    #define _C5_P_i _pointerToRealVars[36]
    #define _C6_P_i _pointerToRealVars[37]
    #define _C7_P_i _pointerToRealVars[38]
    #define _C8_P_i _pointerToRealVars[39]
    #define _C9_P_i _pointerToRealVars[40]
    #define _G_P_p_P_i _pointerToRealVars[41]
    #define _G_P_p_P_v _pointerToRealVars[42]
    #define _G1_P_p_P_i _pointerToRealVars[43]
    #define _G1_P_p_P_v _pointerToRealVars[44]
    #define _G2_P_p_P_i _pointerToRealVars[45]
    #define _G2_P_p_P_v _pointerToRealVars[46]
    #define _G3_P_p_P_i _pointerToRealVars[47]
    #define _G3_P_p_P_v _pointerToRealVars[48]
    #define _G4_P_p_P_i _pointerToRealVars[49]
    #define _G4_P_p_P_v _pointerToRealVars[50]
    #define _Ground1_P_p_P_v _pointerToRealVars[51]
    #define _Op1_P_in_n_P_i _pointerToRealVars[52]
    #define _Op1_P_in_p_P_i _pointerToRealVars[53]
    #define _Op1_P_out_P_i _pointerToRealVars[54]
    #define _Op2_P_in_n_P_i _pointerToRealVars[55]
    #define _Op2_P_in_p_P_i _pointerToRealVars[56]
    #define _Op2_P_out_P_i _pointerToRealVars[57]
    #define _Op3_P_in_n_P_i _pointerToRealVars[58]
    #define _Op3_P_in_p_P_i _pointerToRealVars[59]
    #define _Op3_P_out_P_i _pointerToRealVars[60]
    #define _Op4_P_in_n_P_i _pointerToRealVars[61]
    #define _Op4_P_in_p_P_i _pointerToRealVars[62]
    #define _Op4_P_out_P_i _pointerToRealVars[63]
    #define _Op5_P_in_n_P_i _pointerToRealVars[64]
    #define _Op5_P_in_p_P_i _pointerToRealVars[65]
    #define _Op5_P_out_P_i _pointerToRealVars[66]
    #define _R1_P_Capacitor1_P_i _pointerToRealVars[67]
    #define _R1_P_Capacitor1_P_n_P_v _pointerToRealVars[68]
    #define _R1_P_Capacitor1_P_p_P_v _pointerToRealVars[69]
    #define _R1_P_Ground1_P_p_P_v _pointerToRealVars[70]
    #define _R1_P_Ground2_P_p_P_v _pointerToRealVars[71]
    #define _R1_P_IdealCommutingSwitch1_P_LossPower _pointerToRealVars[72]
    #define _R1_P_IdealCommutingSwitch1_P_n2_P_i _pointerToRealVars[73]
    #define _R1_P_IdealCommutingSwitch1_P_s1 _pointerToRealVars[74]
    #define _R1_P_IdealCommutingSwitch1_P_s2 _pointerToRealVars[75]
    #define _R1_P_IdealCommutingSwitch2_P_LossPower _pointerToRealVars[76]
    #define _R1_P_IdealCommutingSwitch2_P_n2_P_i _pointerToRealVars[77]
    #define _R1_P_IdealCommutingSwitch2_P_s1 _pointerToRealVars[78]
    #define _R1_P_IdealCommutingSwitch2_P_s2 _pointerToRealVars[79]
    #define _R1_P_n2_P_i _pointerToRealVars[80]
    #define _R10_P_Capacitor1_P_i _pointerToRealVars[81]
    #define _R10_P_Capacitor1_P_n_P_v _pointerToRealVars[82]
    #define _R10_P_Capacitor1_P_p_P_v _pointerToRealVars[83]
    #define _R10_P_Ground1_P_p_P_v _pointerToRealVars[84]
    #define _R10_P_Ground2_P_p_P_v _pointerToRealVars[85]
    #define _R10_P_IdealCommutingSwitch1_P_LossPower _pointerToRealVars[86]
    #define _R10_P_IdealCommutingSwitch1_P_n2_P_i _pointerToRealVars[87]
    #define _R10_P_IdealCommutingSwitch1_P_s1 _pointerToRealVars[88]
    #define _R10_P_IdealCommutingSwitch1_P_s2 _pointerToRealVars[89]
    #define _R10_P_IdealCommutingSwitch2_P_LossPower _pointerToRealVars[90]
    #define _R10_P_IdealCommutingSwitch2_P_n2_P_i _pointerToRealVars[91]
    #define _R10_P_IdealCommutingSwitch2_P_s1 _pointerToRealVars[92]
    #define _R10_P_IdealCommutingSwitch2_P_s2 _pointerToRealVars[93]
    #define _R10_P_n1_P_i _pointerToRealVars[94]
    #define _R10_P_n2_P_i _pointerToRealVars[95]
    #define _R11_P_Capacitor1_P_i _pointerToRealVars[96]
    #define _R11_P_Capacitor1_P_n_P_v _pointerToRealVars[97]
    #define _R11_P_Capacitor1_P_p_P_v _pointerToRealVars[98]
    #define _R11_P_Ground1_P_p_P_v _pointerToRealVars[99]
    #define _R11_P_Ground2_P_p_P_v _pointerToRealVars[100]
    #define _R11_P_IdealCommutingSwitch1_P_LossPower _pointerToRealVars[101]
    #define _R11_P_IdealCommutingSwitch1_P_n2_P_i _pointerToRealVars[102]
    #define _R11_P_IdealCommutingSwitch1_P_s1 _pointerToRealVars[103]
    #define _R11_P_IdealCommutingSwitch1_P_s2 _pointerToRealVars[104]
    #define _R11_P_IdealCommutingSwitch2_P_LossPower _pointerToRealVars[105]
    #define _R11_P_IdealCommutingSwitch2_P_n2_P_i _pointerToRealVars[106]
    #define _R11_P_IdealCommutingSwitch2_P_s1 _pointerToRealVars[107]
    #define _R11_P_IdealCommutingSwitch2_P_s2 _pointerToRealVars[108]
    #define _R11_P_n1_P_i _pointerToRealVars[109]
    #define _R11_P_n2_P_i _pointerToRealVars[110]
    #define _R2_P_Capacitor1_P_i _pointerToRealVars[111]
    #define _R2_P_Capacitor1_P_n_P_v _pointerToRealVars[112]
    #define _R2_P_Capacitor1_P_p_P_v _pointerToRealVars[113]
    #define _R2_P_Ground1_P_p_P_v _pointerToRealVars[114]
    #define _R2_P_Ground2_P_p_P_v _pointerToRealVars[115]
    #define _R2_P_IdealCommutingSwitch1_P_LossPower _pointerToRealVars[116]
    #define _R2_P_IdealCommutingSwitch1_P_n2_P_i _pointerToRealVars[117]
    #define _R2_P_IdealCommutingSwitch1_P_s1 _pointerToRealVars[118]
    #define _R2_P_IdealCommutingSwitch1_P_s2 _pointerToRealVars[119]
    #define _R2_P_IdealCommutingSwitch2_P_LossPower _pointerToRealVars[120]
    #define _R2_P_IdealCommutingSwitch2_P_n2_P_i _pointerToRealVars[121]
    #define _R2_P_IdealCommutingSwitch2_P_s1 _pointerToRealVars[122]
    #define _R2_P_IdealCommutingSwitch2_P_s2 _pointerToRealVars[123]
    #define _R2_P_n1_P_i _pointerToRealVars[124]
    #define _R2_P_n2_P_i _pointerToRealVars[125]
    #define _R3_P_Capacitor1_P_i _pointerToRealVars[126]
    #define _R3_P_Capacitor1_P_n_P_v _pointerToRealVars[127]
    #define _R3_P_Capacitor1_P_p_P_v _pointerToRealVars[128]
    #define _R3_P_Ground1_P_p_P_v _pointerToRealVars[129]
    #define _R3_P_Ground2_P_p_P_v _pointerToRealVars[130]
    #define _R3_P_IdealCommutingSwitch1_P_LossPower _pointerToRealVars[131]
    #define _R3_P_IdealCommutingSwitch1_P_n2_P_i _pointerToRealVars[132]
    #define _R3_P_IdealCommutingSwitch1_P_s1 _pointerToRealVars[133]
    #define _R3_P_IdealCommutingSwitch1_P_s2 _pointerToRealVars[134]
    #define _R3_P_IdealCommutingSwitch2_P_LossPower _pointerToRealVars[135]
    #define _R3_P_IdealCommutingSwitch2_P_n2_P_i _pointerToRealVars[136]
    #define _R3_P_IdealCommutingSwitch2_P_s1 _pointerToRealVars[137]
    #define _R3_P_IdealCommutingSwitch2_P_s2 _pointerToRealVars[138]
    #define _R3_P_n1_P_i _pointerToRealVars[139]
    #define _R3_P_n2_P_i _pointerToRealVars[140]
    #define _R4_P_Capacitor1_P_i _pointerToRealVars[141]
    #define _R4_P_Capacitor1_P_n_P_v _pointerToRealVars[142]
    #define _R4_P_Capacitor1_P_p_P_v _pointerToRealVars[143]
    #define _R4_P_Ground1_P_p_P_i _pointerToRealVars[144]
    #define _R4_P_Ground1_P_p_P_v _pointerToRealVars[145]
    #define _R4_P_Ground2_P_p_P_v _pointerToRealVars[146]
    #define _R4_P_IdealCommutingSwitch1_P_LossPower _pointerToRealVars[147]
    #define _R4_P_IdealCommutingSwitch1_P_s1 _pointerToRealVars[148]
    #define _R4_P_IdealCommutingSwitch1_P_s2 _pointerToRealVars[149]
    #define _R4_P_IdealCommutingSwitch2_P_LossPower _pointerToRealVars[150]
    #define _R4_P_IdealCommutingSwitch2_P_n2_P_i _pointerToRealVars[151]
    #define _R4_P_IdealCommutingSwitch2_P_s1 _pointerToRealVars[152]
    #define _R4_P_IdealCommutingSwitch2_P_s2 _pointerToRealVars[153]
    #define _R4_P_n1_P_i _pointerToRealVars[154]
    #define _R4_P_n2_P_i _pointerToRealVars[155]
    #define _R5_P_Capacitor1_P_i _pointerToRealVars[156]
    #define _R5_P_Capacitor1_P_n_P_v _pointerToRealVars[157]
    #define _R5_P_Capacitor1_P_p_P_v _pointerToRealVars[158]
    #define _R5_P_Ground1_P_p_P_v _pointerToRealVars[159]
    #define _R5_P_Ground2_P_p_P_v _pointerToRealVars[160]
    #define _R5_P_IdealCommutingSwitch1_P_LossPower _pointerToRealVars[161]
    #define _R5_P_IdealCommutingSwitch1_P_n1_P_i _pointerToRealVars[162]
    #define _R5_P_IdealCommutingSwitch1_P_s1 _pointerToRealVars[163]
    #define _R5_P_IdealCommutingSwitch1_P_s2 _pointerToRealVars[164]
    #define _R5_P_IdealCommutingSwitch2_P_LossPower _pointerToRealVars[165]
    #define _R5_P_IdealCommutingSwitch2_P_n2_P_i _pointerToRealVars[166]
    #define _R5_P_IdealCommutingSwitch2_P_s1 _pointerToRealVars[167]
    #define _R5_P_IdealCommutingSwitch2_P_s2 _pointerToRealVars[168]
    #define _R5_P_n1_P_i _pointerToRealVars[169]
    #define _R5_P_n2_P_i _pointerToRealVars[170]
    #define _R7_P_Capacitor1_P_i _pointerToRealVars[171]
    #define _R7_P_Capacitor1_P_n_P_v _pointerToRealVars[172]
    #define _R7_P_Capacitor1_P_p_P_v _pointerToRealVars[173]
    #define _R7_P_Ground1_P_p_P_v _pointerToRealVars[174]
    #define _R7_P_Ground2_P_p_P_v _pointerToRealVars[175]
    #define _R7_P_IdealCommutingSwitch1_P_LossPower _pointerToRealVars[176]
    #define _R7_P_IdealCommutingSwitch1_P_n2_P_i _pointerToRealVars[177]
    #define _R7_P_IdealCommutingSwitch1_P_s1 _pointerToRealVars[178]
    #define _R7_P_IdealCommutingSwitch1_P_s2 _pointerToRealVars[179]
    #define _R7_P_IdealCommutingSwitch2_P_LossPower _pointerToRealVars[180]
    #define _R7_P_IdealCommutingSwitch2_P_n2_P_i _pointerToRealVars[181]
    #define _R7_P_IdealCommutingSwitch2_P_s1 _pointerToRealVars[182]
    #define _R7_P_IdealCommutingSwitch2_P_s2 _pointerToRealVars[183]
    #define _R7_P_n1_P_i _pointerToRealVars[184]
    #define _R7_P_n2_P_i _pointerToRealVars[185]
    #define _R8_P_Capacitor1_P_i _pointerToRealVars[186]
    #define _R8_P_Capacitor1_P_n_P_v _pointerToRealVars[187]
    #define _R8_P_Capacitor1_P_p_P_v _pointerToRealVars[188]
    #define _R8_P_Ground1_P_p_P_v _pointerToRealVars[189]
    #define _R8_P_Ground2_P_p_P_v _pointerToRealVars[190]
    #define _R8_P_IdealCommutingSwitch1_P_LossPower _pointerToRealVars[191]
    #define _R8_P_IdealCommutingSwitch1_P_n1_P_i _pointerToRealVars[192]
    #define _R8_P_IdealCommutingSwitch1_P_s1 _pointerToRealVars[193]
    #define _R8_P_IdealCommutingSwitch1_P_s2 _pointerToRealVars[194]
    #define _R8_P_IdealCommutingSwitch2_P_LossPower _pointerToRealVars[195]
    #define _R8_P_IdealCommutingSwitch2_P_n2_P_i _pointerToRealVars[196]
    #define _R8_P_IdealCommutingSwitch2_P_s1 _pointerToRealVars[197]
    #define _R8_P_IdealCommutingSwitch2_P_s2 _pointerToRealVars[198]
    #define _R8_P_n1_P_i _pointerToRealVars[199]
    #define _R8_P_n2_P_i _pointerToRealVars[200]
    #define _R9_P_Capacitor1_P_i _pointerToRealVars[201]
    #define _R9_P_Capacitor1_P_n_P_v _pointerToRealVars[202]
    #define _R9_P_Capacitor1_P_p_P_v _pointerToRealVars[203]
    #define _R9_P_Ground1_P_p_P_v _pointerToRealVars[204]
    #define _R9_P_Ground2_P_p_P_v _pointerToRealVars[205]
    #define _R9_P_IdealCommutingSwitch1_P_LossPower _pointerToRealVars[206]
    #define _R9_P_IdealCommutingSwitch1_P_n1_P_i _pointerToRealVars[207]
    #define _R9_P_IdealCommutingSwitch1_P_s1 _pointerToRealVars[208]
    #define _R9_P_IdealCommutingSwitch1_P_s2 _pointerToRealVars[209]
    #define _R9_P_IdealCommutingSwitch2_P_LossPower _pointerToRealVars[210]
    #define _R9_P_IdealCommutingSwitch2_P_n2_P_i _pointerToRealVars[211]
    #define _R9_P_IdealCommutingSwitch2_P_s1 _pointerToRealVars[212]
    #define _R9_P_IdealCommutingSwitch2_P_s2 _pointerToRealVars[213]
    #define _R9_P_n1_P_i _pointerToRealVars[214]
    #define _R9_P_n2_P_i _pointerToRealVars[215]
    #define _Rp1_P_Capacitor1_P_i _pointerToRealVars[216]
    #define _Rp1_P_Capacitor1_P_n_P_v _pointerToRealVars[217]
    #define _Rp1_P_Capacitor1_P_p_P_v _pointerToRealVars[218]
    #define _Rp1_P_Ground1_P_p_P_v _pointerToRealVars[219]
    #define _Rp1_P_Ground2_P_p_P_v _pointerToRealVars[220]
    #define _Rp1_P_IdealCommutingSwitch1_P_LossPower _pointerToRealVars[221]
    #define _Rp1_P_IdealCommutingSwitch1_P_n2_P_i _pointerToRealVars[222]
    #define _Rp1_P_IdealCommutingSwitch1_P_s1 _pointerToRealVars[223]
    #define _Rp1_P_IdealCommutingSwitch1_P_s2 _pointerToRealVars[224]
    #define _Rp1_P_IdealCommutingSwitch2_P_LossPower _pointerToRealVars[225]
    #define _Rp1_P_IdealCommutingSwitch2_P_n2_P_i _pointerToRealVars[226]
    #define _Rp1_P_IdealCommutingSwitch2_P_s1 _pointerToRealVars[227]
    #define _Rp1_P_IdealCommutingSwitch2_P_s2 _pointerToRealVars[228]
    #define _Rp1_P_n1_P_i _pointerToRealVars[229]
    #define _Rp1_P_n2_P_i _pointerToRealVars[230]
    #define _V_P_i _pointerToRealVars[231]
    #define _V_P_v _pointerToRealVars[232]
    #define _n1_P_i _pointerToRealVars[233]
    #define _n10_P_i _pointerToRealVars[234]
    #define _n11_P_i _pointerToRealVars[235]
    #define _n12_P_i _pointerToRealVars[236]
    #define _n13_P_i _pointerToRealVars[237]
    #define _n14_P_i _pointerToRealVars[238]
    #define _n2_P_i _pointerToRealVars[239]
    #define _n3_P_i _pointerToRealVars[240]
    #define _n4_P_i _pointerToRealVars[241]
    #define _n5_P_i _pointerToRealVars[242]
    #define _n6_P_i _pointerToRealVars[243]
    #define _n7_P_i _pointerToRealVars[244]
    #define _n8_P_i _pointerToRealVars[245]
    #define _n9_P_i _pointerToRealVars[246]
    #define _out1_P_i _pointerToRealVars[247]
    #define _p1_P_i _pointerToRealVars[248]
    #define _p2_P_i _pointerToRealVars[249]
    #define _p3_P_i _pointerToRealVars[250]
    #define _p4_P_i _pointerToRealVars[251]
    /*discrete algvars*/
    #define _R1_P_BooleanPulse1_P_pulsStart _pointerToRealVars[252]
    #define _R10_P_BooleanPulse1_P_pulsStart _pointerToRealVars[253]
    #define _R11_P_BooleanPulse1_P_pulsStart _pointerToRealVars[254]
    #define _R2_P_BooleanPulse1_P_pulsStart _pointerToRealVars[255]
    #define _R3_P_BooleanPulse1_P_pulsStart _pointerToRealVars[256]
    #define _R4_P_BooleanPulse1_P_pulsStart _pointerToRealVars[257]
    #define _R5_P_BooleanPulse1_P_pulsStart _pointerToRealVars[258]
    #define _R7_P_BooleanPulse1_P_pulsStart _pointerToRealVars[259]
    #define _R8_P_BooleanPulse1_P_pulsStart _pointerToRealVars[260]
    #define _R9_P_BooleanPulse1_P_pulsStart _pointerToRealVars[261]
    #define _Rp1_P_BooleanPulse1_P_pulsStart _pointerToRealVars[262]
     /*int algvars*/
    /*bool algvars*/
    #define _$whenCondition1 _pointerToBoolVars[0]
    #define _$whenCondition10 _pointerToBoolVars[1]
    #define _$whenCondition11 _pointerToBoolVars[2]
    #define _$whenCondition2 _pointerToBoolVars[3]
    #define _$whenCondition3 _pointerToBoolVars[4]
    #define _$whenCondition4 _pointerToBoolVars[5]
    #define _$whenCondition5 _pointerToBoolVars[6]
    #define _$whenCondition6 _pointerToBoolVars[7]
    #define _$whenCondition7 _pointerToBoolVars[8]
    #define _$whenCondition8 _pointerToBoolVars[9]
    #define _$whenCondition9 _pointerToBoolVars[10]
    #define _R1_P_BooleanPulse1_P_y _pointerToBoolVars[11]
    #define _R10_P_BooleanPulse1_P_y _pointerToBoolVars[12]
    #define _R11_P_BooleanPulse1_P_y _pointerToBoolVars[13]
    #define _R2_P_BooleanPulse1_P_y _pointerToBoolVars[14]
    #define _R3_P_BooleanPulse1_P_y _pointerToBoolVars[15]
    #define _R4_P_BooleanPulse1_P_y _pointerToBoolVars[16]
    #define _R5_P_BooleanPulse1_P_y _pointerToBoolVars[17]
    #define _R7_P_BooleanPulse1_P_y _pointerToBoolVars[18]
    #define _R8_P_BooleanPulse1_P_y _pointerToBoolVars[19]
    #define _R9_P_BooleanPulse1_P_y _pointerToBoolVars[20]
    #define _Rp1_P_BooleanPulse1_P_y _pointerToBoolVars[21]
     /*mixed array variables*/
    Functions* _functions;
    
    boost::shared_ptr<IAlgLoopSolverFactory> _algLoopSolverFactory;    ///< Factory that provides an appropriate solver
    boost::shared_ptr<IAlgLoop>  //Algloop  which holds equation system
         _algLoop222;
    boost::shared_ptr<IAlgLoopSolver>
         _algLoopSolver222;        ///< Solver for algebraic loop */
     bool* _conditions0222;
     bool* _conditions1222;
     double* _algloop222Vars;
    boost::shared_ptr<IAlgLoop>  //Algloop  which holds equation system
         _algLoop228;
    boost::shared_ptr<IAlgLoopSolver>
         _algLoopSolver228;        ///< Solver for algebraic loop */
     bool* _conditions0228;
     bool* _conditions1228;
     double* _algloop228Vars;
    boost::shared_ptr<IAlgLoop>  //Algloop  which holds equation system
         _algLoop234;
    boost::shared_ptr<IAlgLoopSolver>
         _algLoopSolver234;        ///< Solver for algebraic loop */
     bool* _conditions0234;
     bool* _conditions1234;
     double* _algloop234Vars;
    boost::shared_ptr<IAlgLoop>  //Algloop  which holds equation system
         _algLoop240;
    boost::shared_ptr<IAlgLoopSolver>
         _algLoopSolver240;        ///< Solver for algebraic loop */
     bool* _conditions0240;
     bool* _conditions1240;
     double* _algloop240Vars;
    boost::shared_ptr<IAlgLoop>  //Algloop  which holds equation system
         _algLoop246;
    boost::shared_ptr<IAlgLoopSolver>
         _algLoopSolver246;        ///< Solver for algebraic loop */
     bool* _conditions0246;
     bool* _conditions1246;
     double* _algloop246Vars;
    boost::shared_ptr<IAlgLoop>  //Algloop  which holds equation system
         _algLoop252;
    boost::shared_ptr<IAlgLoopSolver>
         _algLoopSolver252;        ///< Solver for algebraic loop */
     bool* _conditions0252;
     bool* _conditions1252;
     double* _algloop252Vars;
    boost::shared_ptr<IAlgLoop>  //Algloop  which holds equation system
         _algLoop260;
    boost::shared_ptr<IAlgLoopSolver>
         _algLoopSolver260;        ///< Solver for algebraic loop */
     bool* _conditions0260;
     bool* _conditions1260;
     double* _algloop260Vars;
    boost::shared_ptr<IAlgLoop>  //Algloop  which holds equation system
         _algLoop266;
    boost::shared_ptr<IAlgLoopSolver>
         _algLoopSolver266;        ///< Solver for algebraic loop */
     bool* _conditions0266;
     bool* _conditions1266;
     double* _algloop266Vars;
    boost::shared_ptr<IAlgLoop>  //Algloop  which holds equation system
         _algLoop275;
    boost::shared_ptr<IAlgLoopSolver>
         _algLoopSolver275;        ///< Solver for algebraic loop */
     bool* _conditions0275;
     bool* _conditions1275;
     double* _algloop275Vars;
    boost::shared_ptr<IAlgLoop>  //Algloop  which holds equation system
         _algLoop281;
    boost::shared_ptr<IAlgLoopSolver>
         _algLoopSolver281;        ///< Solver for algebraic loop */
     bool* _conditions0281;
     bool* _conditions1281;
     double* _algloop281Vars;
    boost::shared_ptr<IAlgLoop>  //Algloop  which holds equation system
         _algLoop289;
    boost::shared_ptr<IAlgLoopSolver>
         _algLoopSolver289;        ///< Solver for algebraic loop */
     bool* _conditions0289;
     bool* _conditions1289;
     double* _algloop289Vars;
    boost::shared_ptr<IAlgLoop>  //Algloop  which holds equation system
         _algLoop290;
    boost::shared_ptr<IAlgLoopSolver>
         _algLoopSolver290;        ///< Solver for algebraic loop */
     bool* _conditions0290;
     bool* _conditions1290;
     double* _algloop290Vars;
    boost::shared_ptr<IAlgLoop>  //Algloop  which holds equation system
         _algLoop124;
    boost::shared_ptr<IAlgLoopSolver>
         _algLoopSolver124;        ///< Solver for algebraic loop */
     bool* _conditions0124;
     bool* _conditions1124;
     double* _algloop124Vars;
    boost::shared_ptr<IAlgLoop>  //Algloop  which holds equation system
         _algLoop131;
    boost::shared_ptr<IAlgLoopSolver>
         _algLoopSolver131;        ///< Solver for algebraic loop */
     bool* _conditions0131;
     bool* _conditions1131;
     double* _algloop131Vars;
    boost::shared_ptr<IAlgLoop>  //Algloop  which holds equation system
         _algLoop138;
    boost::shared_ptr<IAlgLoopSolver>
         _algLoopSolver138;        ///< Solver for algebraic loop */
     bool* _conditions0138;
     bool* _conditions1138;
     double* _algloop138Vars;
    boost::shared_ptr<IAlgLoop>  //Algloop  which holds equation system
         _algLoop145;
    boost::shared_ptr<IAlgLoopSolver>
         _algLoopSolver145;        ///< Solver for algebraic loop */
     bool* _conditions0145;
     bool* _conditions1145;
     double* _algloop145Vars;
    boost::shared_ptr<IAlgLoop>  //Algloop  which holds equation system
         _algLoop152;
    boost::shared_ptr<IAlgLoopSolver>
         _algLoopSolver152;        ///< Solver for algebraic loop */
     bool* _conditions0152;
     bool* _conditions1152;
     double* _algloop152Vars;
    boost::shared_ptr<IAlgLoop>  //Algloop  which holds equation system
         _algLoop159;
    boost::shared_ptr<IAlgLoopSolver>
         _algLoopSolver159;        ///< Solver for algebraic loop */
     bool* _conditions0159;
     bool* _conditions1159;
     double* _algloop159Vars;
    boost::shared_ptr<IAlgLoop>  //Algloop  which holds equation system
         _algLoop166;
    boost::shared_ptr<IAlgLoopSolver>
         _algLoopSolver166;        ///< Solver for algebraic loop */
     bool* _conditions0166;
     bool* _conditions1166;
     double* _algloop166Vars;
    boost::shared_ptr<IAlgLoop>  //Algloop  which holds equation system
         _algLoop167;
    boost::shared_ptr<IAlgLoopSolver>
         _algLoopSolver167;        ///< Solver for algebraic loop */
     bool* _conditions0167;
     bool* _conditions1167;
     double* _algloop167Vars;
    boost::shared_ptr<IAlgLoop>  //Algloop  which holds equation system
         _algLoop174;
    boost::shared_ptr<IAlgLoopSolver>
         _algLoopSolver174;        ///< Solver for algebraic loop */
     bool* _conditions0174;
     bool* _conditions1174;
     double* _algloop174Vars;
    boost::shared_ptr<IAlgLoop>  //Algloop  which holds equation system
         _algLoop181;
    boost::shared_ptr<IAlgLoopSolver>
         _algLoopSolver181;        ///< Solver for algebraic loop */
     bool* _conditions0181;
     bool* _conditions1181;
     double* _algloop181Vars;
    boost::shared_ptr<IAlgLoop>  //Algloop  which holds equation system
         _algLoop192;
    boost::shared_ptr<IAlgLoopSolver>
         _algLoopSolver192;        ///< Solver for algebraic loop */
     bool* _conditions0192;
     bool* _conditions1192;
     double* _algloop192Vars;
    boost::shared_ptr<IAlgLoop>  //Algloop  which holds equation system
         _algLoop200;
    boost::shared_ptr<IAlgLoopSolver>
         _algLoopSolver200;        ///< Solver for algebraic loop */
     bool* _conditions0200;
     bool* _conditions1200;
     double* _algloop200Vars;




    /*! Index of the first equation. We use this to calculate the offset of an equation in the
       equation array given the index of the equation.*/
     int first_equation_index;
      /*! Equations*/
      FORCE_INLINE void evaluate_209();
      /*! Equations*/
      FORCE_INLINE void evaluate_210();
      /*! Equations*/
      FORCE_INLINE void evaluate_211();
      /*! Equations*/
      FORCE_INLINE void evaluate_212();
      /*! Equations*/
      FORCE_INLINE void evaluate_213();
      /*! Equations*/
      FORCE_INLINE void evaluate_214();
      /*! Equations*/
      FORCE_INLINE void evaluate_215();
      /*! Equations*/
      FORCE_INLINE void evaluate_216();
      /*! Equations*/
      FORCE_INLINE void evaluate_217();
      /*! Equations*/
      FORCE_INLINE void evaluate_218();
      /*! Equations*/
      FORCE_INLINE void evaluate_219();
      /*! Equations*/
      FORCE_INLINE void evaluate_220();
      /*! Equations*/
      FORCE_INLINE void evaluate_221();
      /*! Equations*/
      FORCE_INLINE void evaluate_222();
      /*! Equations*/
      FORCE_INLINE void evaluate_223();
      /*! Equations*/
      FORCE_INLINE void evaluate_224();
      /*! Equations*/
      FORCE_INLINE void evaluate_225();
      /*! Equations*/
      FORCE_INLINE void evaluate_226();
      /*! Equations*/
      FORCE_INLINE void evaluate_227();
      /*! Equations*/
      FORCE_INLINE void evaluate_228();
      /*! Equations*/
      FORCE_INLINE void evaluate_229();
      /*! Equations*/
      FORCE_INLINE void evaluate_230();
      /*! Equations*/
      FORCE_INLINE void evaluate_231();
      /*! Equations*/
      FORCE_INLINE void evaluate_232();
      /*! Equations*/
      FORCE_INLINE void evaluate_233();
      /*! Equations*/
      FORCE_INLINE void evaluate_234();
      /*! Equations*/
      FORCE_INLINE void evaluate_235();
      /*! Equations*/
      FORCE_INLINE void evaluate_236();
      /*! Equations*/
      FORCE_INLINE void evaluate_237();
      /*! Equations*/
      FORCE_INLINE void evaluate_238();
      /*! Equations*/
      FORCE_INLINE void evaluate_239();
      /*! Equations*/
      FORCE_INLINE void evaluate_240();
      /*! Equations*/
      FORCE_INLINE void evaluate_241();
      /*! Equations*/
      FORCE_INLINE void evaluate_242();
      /*! Equations*/
      FORCE_INLINE void evaluate_243();
      /*! Equations*/
      FORCE_INLINE void evaluate_244();
      /*! Equations*/
      FORCE_INLINE void evaluate_245();
      /*! Equations*/
      FORCE_INLINE void evaluate_246();
      /*! Equations*/
      FORCE_INLINE void evaluate_247();
      /*! Equations*/
      FORCE_INLINE void evaluate_248();
      /*! Equations*/
      FORCE_INLINE void evaluate_249();
      /*! Equations*/
      FORCE_INLINE void evaluate_250();
      /*! Equations*/
      FORCE_INLINE void evaluate_251();
      /*! Equations*/
      FORCE_INLINE void evaluate_252();
      /*! Equations*/
      FORCE_INLINE void evaluate_253();
      /*! Equations*/
      FORCE_INLINE void evaluate_254();
      /*! Equations*/
      FORCE_INLINE void evaluate_255();
      /*! Equations*/
      FORCE_INLINE void evaluate_256();
      /*! Equations*/
      FORCE_INLINE void evaluate_257();
      /*! Equations*/
      FORCE_INLINE void evaluate_258();
      /*! Equations*/
      FORCE_INLINE void evaluate_259();
      /*! Equations*/
      FORCE_INLINE void evaluate_260();
      /*! Equations*/
      FORCE_INLINE void evaluate_261();
      /*! Equations*/
      FORCE_INLINE void evaluate_262();
      /*! Equations*/
      FORCE_INLINE void evaluate_263();
      /*! Equations*/
      FORCE_INLINE void evaluate_264();
      /*! Equations*/
      FORCE_INLINE void evaluate_265();
      /*! Equations*/
      FORCE_INLINE void evaluate_266();
      /*! Equations*/
      FORCE_INLINE void evaluate_267();
      /*! Equations*/
      FORCE_INLINE void evaluate_268();
      /*! Equations*/
      FORCE_INLINE void evaluate_269();
      /*! Equations*/
      FORCE_INLINE void evaluate_270();
      /*! Equations*/
      FORCE_INLINE void evaluate_271();
      /*! Equations*/
      FORCE_INLINE void evaluate_272();
      /*! Equations*/
      FORCE_INLINE void evaluate_273();
      /*! Equations*/
      FORCE_INLINE void evaluate_274();
      /*! Equations*/
      FORCE_INLINE void evaluate_275();
      /*! Equations*/
      FORCE_INLINE void evaluate_276();
      /*! Equations*/
      FORCE_INLINE void evaluate_277();
      /*! Equations*/
      FORCE_INLINE void evaluate_278();
      /*! Equations*/
      FORCE_INLINE void evaluate_279();
      /*! Equations*/
      FORCE_INLINE void evaluate_280();
      /*! Equations*/
      FORCE_INLINE void evaluate_281();
      /*! Equations*/
      FORCE_INLINE void evaluate_282();
      /*! Equations*/
      FORCE_INLINE void evaluate_283();
      /*! Equations*/
      FORCE_INLINE void evaluate_284();
      /*! Equations*/
      FORCE_INLINE void evaluate_285();
      /*! Equations*/
      FORCE_INLINE void evaluate_286();
      /*! Equations*/
      FORCE_INLINE void evaluate_287();
      /*! Equations*/
      FORCE_INLINE void evaluate_288();
      /*! Equations*/
      FORCE_INLINE void evaluate_289();
      /*! Equations*/
      FORCE_INLINE void evaluate_290();
      /*! Equations*/
      FORCE_INLINE void evaluate_291();
      /*! Equations*/
      FORCE_INLINE void evaluate_292();
      /*! Equations*/
      FORCE_INLINE void evaluate_293();
      /*! Equations*/
      FORCE_INLINE void evaluate_294();
      /*! Equations*/
      FORCE_INLINE void evaluate_295();
      /*! Equations*/
      FORCE_INLINE void evaluate_296();
    static long unsigned int getThreadNumber()
    {
      boost::hash<std::string> string_hash;
      return (long unsigned int)string_hash(boost::lexical_cast<std::string>(boost::this_thread::get_id()));
    }

    void defineAlgVars_0();
    void defineAlgVars_1();
    void defineAlgVars_2();
    void defineDiscreteAlgVars_0();
    void defineBoolAlgVars_0();
    void defineParameterRealVars_0();
    void defineParameterRealVars_1();
    void defineParameterBoolVars_0();
    void defineAliasRealVars_0();
    void defineAliasRealVars_1();
    void defineAliasRealVars_2();
    void defineAliasBoolVars_0();
    void defineConstVals();bool terminateThreads;
    UPDATETYPE command;
 } VAR_ALIGN_POST;